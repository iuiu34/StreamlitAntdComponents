{"version":3,"sources":["ts/utils.tsx","js/utils.react.js","ts/Buttons.tsx","ts/Tag.tsx","ts/Tabs.tsx","js/tabs.react.js","js/menu.react.js","ts/Menu.tsx","js/tree.react.js","ts/Tree.tsx","js/cascader.react.js","ts/Cascader.tsx","ts/Divider.tsx","ts/Switch.tsx","js/transfer.react.js","ts/Transfer.tsx","ts/Segmented.tsx","js/segmented.react.js","ts/Alert.tsx","ts/Rate.tsx","ts/Steps.tsx","js/steps.react.js","ts/Checkbox.tsx","ts/Result.tsx","ts/Pagination.tsx","js/chip.react.js","ts/Chip.tsx","ts/ColorPicker.tsx","ts/QRCode.tsx","ts/PhoneNumber.tsx","components.tsx","index.tsx"],"names":["CustomIcon","props","icon","style","class_","class","size","color","name","type","innerStyle","getSize","GetColor","iconStyle","Object","assign","_jsx","className","concat","DynamicComponent","antIcon","_Fragment","LabelWrap","label","desc","undefined","align","grow","children","textColor","display","justifyContent","_jsxs","flexDirection","gap","width","lineHeight","fontFamily","fontSize","markdown","RgbaColor","MartineFontSize","MartineRadiusSize","base","arguments","length","indexOf","getTheme","font","backgroundColor","primaryColor","theme","colorPrimary","colorText","colorBgContainer","useMantineTheme","getRootColor","keys","colors","alpha","fn","rgba","DarkenColor","darken","x","ReactMarkdown","rehypePlugins","rehypeRaw","deepCopy","obj","JSON","parse","stringify","insertStyle","id","element","document","getElementById","createElement","innerHTML","root","appendChild","varColor","colorComponents","test","hex","substring","split","map","char","join","r","g","b","match","c","parseInt","_","Number","getColorComponents","getComputedStyle","documentElement","getPropertyValue","trim","getCollapseKeys","items","getKey","Array","isArray","obj_","push","key","getParentKeys","parentKeys","k","getParent","allParentKeys","getParentKey","tree","parentKey","i","node","some","item","getParentKey_","j","reindex","index","asString","String","getHrefKeys","href","parseIcon","prototype","toString","call","AntdButtons","description","variant","radius","direction","return_index","kv","selected","setSelected","useState","useEffect","setTimeout","Streamlit","setFrameHeight","prevIndex","useRef","prevStValue","st_i","current","setComponentValue","onClick","idx","buttonGroup","otherType","find","type_","background_color","AntdButton","isSelect","linkColor","selectStyle","unSelectStyle","ConfigProvider","components","Button","colorTextDisabled","colorBgContainerDisabled","colorPrimaryHover","colorPrimaryActive","colorBgTextHover","colorLink","colorLinkHover","colorLinkActive","colorBorder","borderRadius","disabled","target","Space","Compact","wrap","classNames","AntdTags","tagStyle","Tag","defaultColor","defaultBg","colorFillSecondary","link","bordered","closable","marginRight","closeIcon","margin","paddingInline","rel","AntdTag","AntdTabs","strToNode","obj_copy","tag","position","height","borderColor","activeKey","setActiveKey","tabsHeight","includes","Tabs","itemActiveColor","itemHoverColor","itemSelectedColor","inkBarColor","cardBg","cardGutter","cardHeight","colorBorderSecondary","defaultActiveKey","onTabClick","tabPosition","desc_color","wordBreak","fontWeight","flexGrow","AntdMenu","dsk","openIndex","open_index","openAll","indent","dok","primaryLightColor","bgColor","textStyle","selectKey","setSelectKey","Menu","itemBorderRadius","itemColor","groupTitleColor","itemDisabledColor","itemHoverBg","itemActiveBg","itemSelectedBg","subMenuItemBg","itemBg","colorSplit","itemHeight","onSelect","e","onOpenChange","stValue","selectedKeys","borderRightWidth","overflowY","defaultSelectedKeys","defaultOpenKeys","mode","inlineIndent","subMenuCloseDelay","treeIcon","itemIcon","tooltip","whiteSpace","alignSelf","Tooltip","colorBgSpotlight","colorTextLightSolid","controlHeight","title","placement","arrow","overlayInnerStyle","padding","border","AntdTree","checkable","checkStrictly","showLine","value","setValue","Tree","controlItemBgHover","controlItemBgActive","controlInteractiveSize","selectedKeys_","info","onCheck","checkedKeys_","ck","onExpand","checkedKeys","defaultCheckedKeys","defaultExpandedKeys","treeData","selectable","switcherIcon","CaretDownFilled","blockNode","virtual","overflowX","AntdCascader","placeholder","multiple","search","allowClear","strict","borderStyle","setHeight","Cascader","Select","colorBgElevated","colorTextPlaceholder","colorIcon","colorIconHover","controlOutlineWidth","options","onChange","v","st","from","Set","flat","sort","showSearch","filter","inputValue","path","option","rawLabel","toLowerCase","dropdownMatchSelectWidth","suffixIcon","expandIcon","CaretRightFilled","maxTagCount","maxTagTextLength","defaultValue","popupClassName","onDropdownVisibleChange","visible","notFoundContent","textAlign","displayRender","labels","selectedOptions","expandTrigger","showCheckedStrategy","SHOW_PARENT","SHOW_CHILD","AntdDivider","Divider","labelPosition","AntdSwitch","onLabel","offLabel","onColor","offColor","secondaryBgColor","checked","setChecked","Switch","event","currentTarget","styles","marginBottom","trackLabel","track","cursor","AntdTransfer","titles","pagination","oneway","reload","dataSource","setDataSource","targetKeys","setTargetKeys","reset","Transfer","controlItemBgActiveHover","Checkbox","Input","activeBorderColor","Pagination","Dropdown","boxShadowSecondary","Empty","nextTargetKeys","moveKeys","onSearch","dir","render","showSelectAll","oneWay","listStyle","minHeight","footer","renderFooter","float","ReloadOutlined","AntdSegmented","item_","divider","readonly","SegmentedControl","data","fullWidth","orientation","readOnly","alignItems","indicator","control","AntdAlert","message","banner","colorList","getStyle","primary","lighten","getPlay","totalBanner","messageBanner","descriptionBanner","ban","db","Boolean","getBanner","customMarquee","Marquee","pauseOnHover","speed","play","Alert","showIcon","onClose","AntdRate","count","symbol","half","Rate","colorFillContent","character","StarFilled","allowHalf","AntdSteps","dot","setCurrent","Steps","colorTextLabel","navArrowColor","colorTextDescription","customIconFontSize","iconFontSize","iconSize","dotSize","dotCurrentSize","iconTop","labelPlacement","progressDot","AntdCheckbox","check_all","allIndex","checkedList","setCheckedList","initState","y","indeterminate","setIndeterminate","checkAll","setCheckAll","onCheckAllChange","st_ii","paddingRight","Group","list","AntdResult","subtitle","status","colorMap","Result","colorTextHeading","extraMargin","colorInfo","colorSuccess","success","colorWarning","warning","colorError","error","s","subTitle","wordWrap","AntdPagination","total","page_size","jump","previous","next","simple","show_total","colorBgTextActive","itemSize","controlItemBgActiveDisabled","showQuickJumper","defaultCurrent","defaultPageSize","page","showTitle","showSizeChanger","itemRender","originalElement","showTotal","t","AntdChip","Wrap","Stack","ii","Chip","values","spacing","checkIcon","AntdColorPicker","labelHeight","setColor","ColorPicker","open","AntdQRCode","QRCode","Option","componentsMap","PhoneInput","international","defaultCountry","countrySelectProps","showFlags","inputComponent","inputProps","addonBefore","StreamlitAntdComponent","withStreamlitConnection","args","kw","insertScrollbarStyle","scrollBarColor","component","ReactDOM","React","StrictMode"],"mappings":"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","file":"static/js/main.34cba721.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {GetColor, getSize, markdown, RgbaColor} from \"../js/utils.react\";\r\nimport * as antIcon from \"@ant-design/icons\";\r\n\r\n\r\ninterface BaseProp {\r\n    color: any;\r\n    background_color: any;\r\n    size: any;\r\n    font: any;\r\n}\r\n\r\n\r\ninterface CustomIconProps {\r\n    icon: { size: any, color: any, name: any, type: any } | null | any\r\n    style?: React.CSSProperties\r\n    class?: string\r\n}\r\n\r\nconst CustomIcon = (props: CustomIconProps) => {\r\n    const icon = props.icon\r\n    const style = props.style\r\n    const class_ = props.class\r\n    if (icon) {\r\n        const {size, color, name, type} = icon\r\n        let innerStyle = {}\r\n        if (size) {\r\n            // @ts-ignore\r\n            innerStyle['fontSize'] = getSize(size)\r\n        }\r\n        if (color) {\r\n            // @ts-ignore\r\n            innerStyle['color'] = GetColor(color)\r\n        }\r\n        const iconStyle = Object.assign({}, style, innerStyle)\r\n        if (type === 'BsIcon') {\r\n            return <i className={`bi bi-${name} ${class_ || ''}`} style={iconStyle}/>\r\n        }\r\n        if (type === 'AntIcon') {\r\n            // @ts-ignore\r\n            const DynamicComponent = antIcon[name]\r\n            return <DynamicComponent className={class_ || ''} style={iconStyle}/>\r\n        }\r\n    }\r\n    return <></>\r\n}\r\n\r\ninterface LabelWrapProps {\r\n    label: string\r\n    desc: string\r\n    size?: string\r\n    align?: string\r\n    grow?: boolean\r\n    children: React.ReactNode\r\n    style?: React.CSSProperties\r\n}\r\n\r\nconst LabelWrap = (props: LabelWrapProps) => {\r\n    const label = props.label\r\n    const desc = props.desc\r\n    const size = props.size === undefined ? 'md' : props.size\r\n    const align = props.align === undefined ? 'start' : props.align\r\n    const grow = props.grow === undefined ? false : props.grow\r\n    const children = props.children\r\n    const style = props.style\r\n    const textColor = GetColor('--text-color')\r\n\r\n    return <div style={{display: grow ? 'block' : 'flex', justifyContent: align}}>\r\n        <div style={Object.assign({\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            gap: 5,\r\n            width: grow ? '100%' : 'unset',\r\n        }, style)}>\r\n            <div style={{lineHeight: 1.3, fontFamily: 'var(--font)', display: label === null ? 'none' : 'block'}}>\r\n                <div style={{color: textColor, fontSize: getSize(size)}}>{markdown(label)}</div>\r\n                <div style={{\r\n                    color: RgbaColor(textColor, 0.5),\r\n                    fontSize: getSize(size) - 2,\r\n                    display: desc === null ? 'none' : 'block'\r\n                }}>{markdown(desc)}</div>\r\n            </div>\r\n            {children}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport {CustomIcon, LabelWrap};\r\nexport type {BaseProp};","import React from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport rehypeRaw from \"rehype-raw\";\r\nimport {useMantineTheme} from \"@mantine/core\";\r\nimport {CustomIcon} from \"../ts/utils\";\r\n\r\nconst MartineFontSize = {\r\n    'xs': 12,\r\n    'sm': 14,\r\n    'md': 16,\r\n    'lg': 18,\r\n    'xl': 20,\r\n}\r\nconst MartineRadiusSize = {\r\n    'xs': 2,\r\n    'sm': 4,\r\n    'md': 8,\r\n    'lg': 16,\r\n    'xl': 32,\r\n}\r\n\r\nconst getFlexDirection = (position) => {\r\n    const IconPosition = {\r\n        'left': 'row',\r\n        'right': 'row-reverse',\r\n        'top': 'column',\r\n        'bottom': 'column-reverse'\r\n    }\r\n    if (Object.keys(IconPosition).indexOf(position) !== -1) {\r\n        return IconPosition[position]\r\n    }\r\n    return 'row'\r\n}\r\n\r\nconst getSize = (size, base = MartineFontSize) => {\r\n    if (['xs', 'sm', 'md', 'lg', 'xl'].indexOf(size) !== -1) {\r\n        return base[size]\r\n    } else {\r\n        return size\r\n    }\r\n}\r\n\r\n\r\nconst getTheme = (props) => {\r\n    const color = props['color']\r\n    const font = props['font'] != null ? props['font'] : 'inherit'\r\n    const backgroundColor = props['background_color'] != null ? props['background_color'] : 'transparent'\r\n    const size = getSize(props['size'] != null ? props['size'] : 'md')\r\n    const primaryColor = GetColor(color == null ? '--primary-color' : color)\r\n    const textColor = GetColor('--text-color')\r\n    const theme = {\r\n        colorPrimary: color,\r\n        colorText: textColor,\r\n        fontSize: size,\r\n        fontFamily: font,\r\n        colorBgContainer: backgroundColor,\r\n    }\r\n    return {color, font, backgroundColor, size, primaryColor, textColor, theme}\r\n}\r\n\r\nconst GetColor = (color) => {\r\n    const theme = useMantineTheme()\r\n    if (color.indexOf('--') === 0) {\r\n        return getRootColor(color)\r\n    } else {\r\n        if (Object.keys(theme.colors).indexOf(color) !== -1) {\r\n            return theme.colors[color][6]\r\n        } else {\r\n            return color\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst RgbaColor = (color, alpha = 0.2) => {\r\n    const theme = useMantineTheme()\r\n    return theme.fn.rgba(color, alpha)\r\n}\r\nconst DarkenColor = (color, alpha = 0.2) => {\r\n    const theme = useMantineTheme()\r\n    return theme.fn.darken(color, alpha)\r\n}\r\nconst LightenColor = (color, alpha = 0.2) => {\r\n    const theme = useMantineTheme()\r\n    return theme.fn.lighten(color, alpha)\r\n}\r\n\r\n\r\nconst markdown = (x) => {\r\n    if (x !== null) {\r\n        return <ReactMarkdown rehypePlugins={[rehypeRaw]} className={'sac-markdown'}>{x}</ReactMarkdown>\r\n    }\r\n    return undefined\r\n}\r\n\r\nconst deepCopy = (obj) => {\r\n    return JSON.parse(JSON.stringify(obj))\r\n}\r\n\r\nconst insertStyle = (id, style) => {\r\n    let element = document.getElementById(id);\r\n    if (!element) {\r\n        element = document.createElement(\"style\");\r\n        element.id = id;\r\n    }\r\n    element.innerHTML = style;\r\n    let root = document.getElementById(\"root\");\r\n    root && root.appendChild(element)\r\n}\r\n\r\nconst insertScrollbarStyle = () => {\r\n    const textColor = GetColor('--text-color')\r\n    let scrollBarColor = RgbaColor(textColor, 0.4)\r\n    let style = `\r\n        ::-webkit-scrollbar {\r\n            height: 6px;\r\n            width: 6px;\r\n            background-color: transparent;\r\n        }\r\n        ::-webkit-scrollbar-thumb {\r\n            border-radius: 10px;\r\n            background-color: ${scrollBarColor};\r\n        }`\r\n    //insert style\r\n    insertStyle('sac.scrollbar', style)\r\n}\r\n\r\nconst getRootColor = (varColor) => {\r\n    const getColorComponents = (color) => {\r\n        // Handle hexadecimal color format\r\n        const hexMatch = /^#([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$/;\r\n        if (hexMatch.test(color)) {\r\n            let hex = color.substring(1);\r\n            if (hex.length === 3) {\r\n                hex = hex.split('').map((char) => char + char).join('');\r\n            }\r\n            const [r, g, b] = hex.match(/.{2}/g).map((c) => parseInt(c, 16));\r\n            return [r, g, b];\r\n        }\r\n\r\n        // Handle RGB and RGBA color formats\r\n        const rgbMatch = /^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*[\\d.]+)?\\)$/;\r\n        const match = color.match(rgbMatch);\r\n        if (match) {\r\n            const [_, r, g, b] = match.map(Number);\r\n            return [r, g, b];\r\n        }\r\n\r\n        // Handle other color formats or invalid colors\r\n        return null;\r\n    };\r\n    const color = getComputedStyle(document.documentElement).getPropertyValue(varColor).trim();\r\n    const colorComponents = getColorComponents(color)\r\n    if (colorComponents) {\r\n        const [r, g, b] = colorComponents\r\n        return `rgb(${r},${g},${b})`\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\nconst getCollapseKeys = (items) => {\r\n    let keys = []\r\n\r\n    const getKey = (obj) => {\r\n        if (Array.isArray(obj)) {\r\n            obj.map(obj_ => getKey(obj_))\r\n        } else {\r\n            if (obj.children) {\r\n                obj.children.map((obj_) => getKey(obj_))\r\n                keys.push(obj.key)\r\n            }\r\n        }\r\n    }\r\n    getKey(items)\r\n    return keys\r\n}\r\n\r\nconst getParentKeys = (keys, obj) => {\r\n    const getParent = (k, obj) => {\r\n        let allParentKeys = []\r\n        //get one parent key\r\n        const getParentKey = (key, tree) => {\r\n            let parentKey;\r\n            for (let i = 0; i < tree.length; i++) {\r\n                const node = tree[i];\r\n                if (node.children) {\r\n                    if (node.children.some((item) => item.key === key)) {\r\n                        parentKey = node.key;\r\n                    } else if (getParentKey(key, node.children)) {\r\n                        parentKey = getParentKey(key, node.children);\r\n                    }\r\n                }\r\n            }\r\n            return parentKey;\r\n        }\r\n        const getParentKey_ = (k, obj) => {\r\n            let key = getParentKey(k, obj)\r\n            if (key) {\r\n                allParentKeys.push(key)\r\n                getParentKey_(key, obj)\r\n            }\r\n        }\r\n        getParentKey_(k, obj)\r\n        return allParentKeys\r\n    }\r\n    let parentKeys = keys.map(k => getParent(k, obj))\r\n    let parentKey = []\r\n    for (let i = 0; i < parentKeys.length; i += 1) {\r\n        let element = parentKeys[i]\r\n        for (let j = 0; j < element.length; j += 1) {\r\n            parentKey.push(element[j])\r\n        }\r\n    }\r\n    return parentKey\r\n}\r\n\r\nconst reindex = (index, asString = true, asArray = true) => {\r\n    let r = index\r\n    if (typeof (index) == 'number') {\r\n        if (asArray) {\r\n            r = [asString ? String(index) : index]\r\n        } else {\r\n            r = asString ? String(index) : index\r\n        }\r\n    }\r\n    if (Array.isArray(index) && asString) {\r\n        r = index.map(i => String(i))\r\n    }\r\n    return r\r\n}\r\n\r\nconst getHrefKeys = (items) => {\r\n    let keys = []\r\n\r\n    const getKey = (obj) => {\r\n        if (Array.isArray(obj)) {\r\n            obj.map(obj_ => getKey(obj_))\r\n        } else {\r\n            if (obj.children) {\r\n                obj.children.map((obj_) => getKey(obj_))\r\n            }\r\n            if (obj.href != null) {\r\n                keys.push(obj.key)\r\n            }\r\n        }\r\n    }\r\n    getKey(items)\r\n    return keys\r\n}\r\n\r\nconst parseIcon = (obj) => {\r\n    if (Object.prototype.toString.call(obj) === '[object Object]') {\r\n        return <CustomIcon icon={obj}/>\r\n    }\r\n    return obj\r\n}\r\n\r\nexport {\r\n    deepCopy,\r\n    insertScrollbarStyle,\r\n    getCollapseKeys,\r\n    getHrefKeys,\r\n    getParentKeys,\r\n    reindex,\r\n    parseIcon,\r\n    markdown,\r\n    insertStyle,\r\n    MartineFontSize,\r\n    MartineRadiusSize,\r\n    GetColor, RgbaColor, DarkenColor, LightenColor, getFlexDirection,\r\n    getTheme, getSize\r\n};","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {Button, ConfigProvider, Space} from 'antd';\r\nimport {getHrefKeys, getSize, getTheme, insertStyle, MartineRadiusSize, RgbaColor} from \"../js/utils.react\"\r\nimport {BaseProp, CustomIcon, LabelWrap} from \"./utils\";\r\nimport \"../css/buttons.css\"\r\n\r\ninterface ButtonsProp extends BaseProp {\r\n    label: any;\r\n    description: any;\r\n    items: any[];\r\n    index: number | null;\r\n    variant: string;\r\n    align: any;\r\n    radius: any\r\n    background_color: any;\r\n    direction: \"horizontal\" | \"vertical\" | undefined;\r\n    gap: any;\r\n    use_container_width: boolean;\r\n    return_index: boolean;\r\n    kv: any;\r\n    stValue: any\r\n}\r\n\r\ninterface ButtonProp extends BaseProp {\r\n    label: any;\r\n    icon: any;\r\n    disabled: any;\r\n    href: any;\r\n}\r\n\r\n\r\nconst AntdButton = (idx: any, type_: any, radius: any, props: ButtonProp, onClick: any, isSelect: boolean, grow: boolean) => {\r\n    //get data\r\n    const {color, font, backgroundColor, size, primaryColor, textColor, theme} = getTheme(props);\r\n\r\n    const linkColor = props['color'] != null ? props['color'] : '#1677ff'\r\n\r\n    let selectStyle = `\r\n        #btn-${idx}.ant-btn-default:not(:disabled):active,#btn-${idx}.ant-btn-dashed:not(:disabled):active {\r\n            color: #fff !important;\r\n            border-color: ${primaryColor} !important;\r\n            background: ${primaryColor} !important;\r\n        }\r\n        #btn-${idx}.ant-btn-primary:not(:disabled):active {\r\n            color: ${primaryColor} !important;\r\n            background: transparent !important;\r\n            border-color: ${primaryColor} !important;\r\n        }\r\n    `\r\n    let unSelectStyle = `\r\n        #btn-${idx}.ant-btn-primary:not(:disabled):hover{\r\n            box-shadow: 0 0 3px ${primaryColor}, 0 0 3px rgba(0, 0, 0, .05);\r\n        }\r\n        #btn-${idx}.ant-btn-text:not(:disabled):hover{\r\n            color:${textColor};\r\n        }\r\n        #btn-${idx}.ant-btn-text{\r\n            color:${textColor};\r\n        }\r\n        #btn-${idx}.ant-btn-text:disabled{\r\n            color:${RgbaColor(textColor, 0.5)};\r\n        }\r\n    `\r\n\r\n    insertStyle(`sac.buttons${idx}.style`, isSelect ? selectStyle : unSelectStyle)\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Button: {\r\n                        ...theme,\r\n                        colorText: isSelect ? textColor : primaryColor,\r\n                        colorTextDisabled: RgbaColor(textColor, 0.5),\r\n                        colorBgContainerDisabled: 'transform',\r\n                        colorPrimaryHover: primaryColor,\r\n                        colorPrimaryActive: primaryColor,\r\n                        colorBgTextHover: RgbaColor(textColor, 0.1),\r\n                        colorLink: linkColor,\r\n                        colorLinkHover: linkColor,\r\n                        colorLinkActive: linkColor,\r\n                        // controlHeight: 3 * getSize(size) - 10,\r\n                        colorBorder: isSelect ? RgbaColor(textColor) : primaryColor,\r\n                        borderRadius: getSize(radius, MartineRadiusSize),\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            <Button\r\n                id={`btn-${idx}`}\r\n                key={idx}\r\n                type={type_}\r\n                onClick={() => onClick(idx)}\r\n                disabled={props['disabled']}\r\n                href={props['href'] ? props['href'] : undefined}\r\n                target={'_blank'}\r\n                icon={props['icon'] && <CustomIcon icon={props.icon}/>}\r\n            >\r\n                {props['label']}\r\n            </Button>\r\n        </ConfigProvider>\r\n    )\r\n}\r\n\r\nconst AntdButtons = (props: ButtonsProp) => {\r\n    //get data\r\n    const {color, font, backgroundColor, size, primaryColor, textColor, theme} = getTheme(props);\r\n\r\n    const label = props['label']\r\n    const description = props['description']\r\n    const items = props['items']\r\n    const index = props['index']\r\n    let variant = props['variant']\r\n    variant = variant === 'outline' ? 'default' : variant === 'filled' ? 'primary' : variant\r\n    const align = props['align']\r\n    const radius = props['radius']\r\n    const direction = props['direction']\r\n    const gap = props['gap']\r\n    const grow = props['use_container_width']\r\n    const return_index = props['return_index']\r\n    const kv = props['kv']\r\n\r\n    //load custom style\r\n    let style = `      \r\n        .ant-btn-primary:disabled{\r\n            color: ${RgbaColor(textColor, 0.5)} !important;\r\n            background: ${RgbaColor(textColor, 0.1)} !important;\r\n            border-color: ${RgbaColor(textColor, 0.1)} !important;\r\n        }\r\n        .ant-btn-dashed:disabled,.ant-btn-default:disabled{\r\n            border-color: ${RgbaColor(textColor, 0.1)} !important;\r\n        }\r\n        .ant-btn {\r\n            min-height: ${3 * getSize(size) - 10}px;\r\n            min-width: ${3 * getSize(size) - 10}px;\r\n            width: ${grow ? '100%' : 'auto'} !important;\r\n            padding: ${getSize(size) * 0.3}px ${getSize(size) * 0.8}px;\r\n        }\r\n        .ant-btn.ant-btn-icon-only{\r\n            padding:${getSize(size) * 0.3}px\r\n        }\r\n        .ant-space-compact .ant-btn{\r\n            flex-grow:${grow ? 1 : undefined}\r\n        }\r\n    `\r\n    insertStyle(`sac.buttons.style`, style)\r\n\r\n    //state\r\n    const [selected, setSelected] = useState(index)\r\n\r\n    // set timeout to render component height\r\n    useEffect(() => {\r\n        setTimeout(() => Streamlit.setFrameHeight(), 0.01)\r\n    })\r\n\r\n    //listen index\r\n    const prevIndex = useRef(props['index'])\r\n    const prevStValue = useRef(props['stValue'])\r\n    useEffect(() => {\r\n        const i = props['index']\r\n        const st_i = props['stValue']\r\n        if (i !== prevIndex.current && i !== null) {\r\n            setSelected(i);\r\n            Streamlit.setComponentValue(return_index ? i : kv[i]);\r\n            prevIndex.current = props['index']\r\n        }\r\n        if (st_i !== prevStValue.current) {\r\n            setSelected(st_i);\r\n            Streamlit.setComponentValue(return_index ? st_i : kv[st_i]);\r\n            prevStValue.current = props['stValue']\r\n        }\r\n    }, [props, kv, return_index])\r\n\r\n    //callback\r\n    const onClick = (idx: number) => {\r\n        //not href index\r\n        if (getHrefKeys(items).indexOf(idx) === -1) {\r\n            setSelected(idx)\r\n            Streamlit.setComponentValue(return_index ? idx : kv[idx])\r\n        }\r\n    }\r\n\r\n    const buttonGroup = items.map((item: any, idx) => {\r\n            let otherType = ['primary', 'default'].find((x) => x !== variant)\r\n            let type_: any = index != null ? selected === idx ? otherType : variant : variant\r\n            item.color = item.color != null ? item.color : color\r\n            item.background_color = item.background_color != null ? item.background_color : backgroundColor\r\n            item.size = item.size != null ? item.size : size\r\n            item.font = item.font != null ? item.font : font\r\n            return AntdButton(idx, type_, radius, item, onClick, index != null, grow)\r\n        }\r\n    )\r\n\r\n\r\n    return (\r\n        <LabelWrap\r\n            label={label}\r\n            desc={description}\r\n            size={size}\r\n            align={align}\r\n            grow={grow}\r\n            children={\r\n                typeof (gap) == 'number' && gap === 0 ?\r\n                    <Space.Compact direction={direction}>\r\n                        {buttonGroup}\r\n                    </Space.Compact> :\r\n                    <Space direction={direction} wrap={true} size={4 * getSize(gap) - 46}\r\n                           classNames={{item: grow ? 'flex-fill' : ''}}>\r\n                        {buttonGroup}\r\n                    </Space>\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default AntdButtons\r\n","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect} from \"react\";\r\nimport {ConfigProvider, Space, Tag} from 'antd';\r\nimport {GetColor, getSize, getTheme, insertStyle, MartineRadiusSize, RgbaColor} from \"../js/utils.react\";\r\nimport {BaseProp, CustomIcon} from \"./utils\";\r\n\r\ninterface tagProp extends BaseProp {\r\n    label: any\r\n    radius: any\r\n    icon: any\r\n    link: any\r\n    bordered: any\r\n    closable: any\r\n}\r\n\r\ninterface TagsProp extends BaseProp {\r\n    items: tagProp[]\r\n    align?: string\r\n    direction?: \"horizontal\" | \"vertical\"\r\n    radius?: any\r\n    style?: React.CSSProperties\r\n}\r\n\r\nconst AntdTag = (props: tagProp) => {\r\n    //get data\r\n    const {color, font, backgroundColor, size, primaryColor, textColor, theme} = getTheme(props);\r\n\r\n    const label = props['label'];\r\n    const radius = props['radius'] || 'md';\r\n    const icon = props['icon'];\r\n    const link = props['link'];\r\n    const bordered = props['bordered'];\r\n    const closable = props['closable'];\r\n\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Tag: {\r\n                        defaultColor: 'var(--text-color)',\r\n                        defaultBg: RgbaColor(textColor, 0.05),\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            <Tag\r\n                color={color}\r\n                icon={<CustomIcon icon={icon} style={{marginRight: label ? 5 : 0}}/>}\r\n                closeIcon={closable}\r\n                bordered={bordered}\r\n                style={{\r\n                    margin: 0,\r\n                    borderRadius: getSize(radius, MartineRadiusSize),\r\n                    fontSize: getSize(size),\r\n                    paddingInline: getSize(size) * 0.5,\r\n                    lineHeight: `${getSize(size) * 1.1}px`,\r\n                }}\r\n            >\r\n                {link ?\r\n                    <a href={link} target={'_blank'} rel={'noreferrer'} className={'text-decoration-none'}\r\n                       style={{color: 'inherit'}}>{label}</a> : label}\r\n            </Tag>\r\n        </ConfigProvider>\r\n    );\r\n}\r\n\r\nconst AntdTags = (props: TagsProp) => {\r\n    //get data\r\n    const {color, font, backgroundColor, size, primaryColor, textColor, theme} = getTheme(props);\r\n\r\n    const items = props['items'];\r\n    const align = props['align'];\r\n    const direction = props['direction'];\r\n    const radius = props['radius'];\r\n    const style = props['style'];\r\n\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n    let tagStyle = `\r\n        .anticon.anticon-close.ant-tag-close-icon{\r\n            color: inherit;\r\n            font-size: ${getSize(size) - 4}px;\r\n        }\r\n    `\r\n    insertStyle('sac.tags.style', tagStyle)\r\n\r\n    return <ConfigProvider\r\n        theme={{\r\n            components: {\r\n                Tag: {\r\n                    ...theme,\r\n                    defaultColor: 'var(--text-color)',\r\n                    defaultBg: RgbaColor(GetColor('--text-color'), 0.05),\r\n                    colorFillSecondary: RgbaColor(GetColor('--primary-color'), 0.1),\r\n                    colorPrimary: 'var(--primary-color)',\r\n                    colorPrimaryActive: 'var(--primary-color)',\r\n                    colorPrimaryHover: 'var(--primary-color)',\r\n                },\r\n            },\r\n        }}\r\n    >\r\n        <Space\r\n            className={`${direction === 'horizontal' && 'd-flex'} justify-content-${align} flex-wrap align-items-center`}\r\n            direction={direction}\r\n            size={5}\r\n            style={style}\r\n            classNames={{item: 'd-flex align-items-center'}}\r\n        >\r\n            {items.map((item: any) => {\r\n                item.size = item.size || size\r\n                item.radius = item.radius || radius\r\n                item.color = item.color || color\r\n                return AntdTag(item)\r\n            })}\r\n        </Space>\r\n    </ConfigProvider>\r\n};\r\n\r\nexport {AntdTags, AntdTag}\r\n","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {ConfigProvider, Tabs} from 'antd';\r\nimport {strToNode} from \"../js/tabs.react\";\r\nimport {getSize, getTheme, insertStyle, RgbaColor} from \"../js/utils.react\"\r\nimport '../css/tabs.css'\r\nimport {BaseProp} from \"./utils\";\r\n\r\ninterface TabsProp extends BaseProp {\r\n    items: any[];\r\n    index: string;\r\n    align: string;\r\n    position: any;\r\n    variant: any;\r\n    height: number | null;\r\n    use_container_width: boolean;\r\n    return_index: boolean;\r\n    kv: any;\r\n    stValue: any\r\n}\r\n\r\nconst AntdTabs = (props: TabsProp) => {\r\n    //get data\r\n    const {color, font, backgroundColor, size, primaryColor, textColor, theme} = getTheme(props);\r\n\r\n    const items = strToNode(props['items'], size)\r\n    const index = props['index']\r\n    const align = props['align']\r\n    const position = props['position']\r\n    const variant = props['variant']\r\n    const height = props['height']\r\n    const grow = props['use_container_width']\r\n    const return_index = props['return_index']\r\n    const kv = props['kv']\r\n    const borderColor = RgbaColor(textColor, 0.1)\r\n\r\n    const [activeKey, setActiveKey] = useState(index)\r\n\r\n    // load style\r\n    let style = `\r\n        .ant-tabs-nav-wrap{\r\n            justify-content: ${align};\r\n        }\r\n        .ant-tabs-nav:before {\r\n            border-bottom: ${variant === 'default' ? 2 : 1}px solid ${borderColor} !important;\r\n        }\r\n        .ant-tabs-right > .ant-tabs-content-holder {\r\n            margin-right: -2px;\r\n            border-right: 2px solid ${borderColor};\r\n        }\r\n        .ant-tabs-left > .ant-tabs-content-holder {\r\n            margin-left: -2px;\r\n            border-left: 2px solid ${borderColor};\r\n        }\r\n        .ant-tabs-card .ant-tabs-tab{\r\n            border-radius: ${position === 'top' ? '8px 8px 0 0' :\r\n        position === 'bottom' ? '0 0 8px 8px' :\r\n            position === 'left' ? '8px 0 0 8px' :\r\n                position === 'right' ? '0 8px 8px 0' : '8px'} !important\r\n        }\r\n        .ant-tabs-card .ant-tabs-tab-active{\r\n            border-width: 1px;\r\n            border-style: solid;\r\n            border-color: ${position === 'top' ? `${borderColor} ${borderColor} ${backgroundColor} ${borderColor}` :\r\n        position === 'bottom' ? `${backgroundColor} ${borderColor} ${borderColor} ${borderColor}` :\r\n            position === 'left' ? `${borderColor} ${backgroundColor} ${borderColor} ${borderColor}` :\r\n                position === 'right' ? `${borderColor} ${borderColor} ${borderColor} ${backgroundColor}` : ''} !important\r\n        }\r\n        `\r\n    let growStyle = `\r\n        .ant-tabs-tab{\r\n            flex-grow: 1;\r\n        }\r\n        .ant-tabs-nav-list{\r\n            flex-grow: 1;\r\n        }\r\n    `\r\n    insertStyle('sac.tabs.style', grow ? style + growStyle : style)\r\n\r\n    //component height\r\n    let tabsHeight = ['left', 'right'].includes(position) && height != null ? height : undefined\r\n\r\n    // set component height\r\n    useEffect(() => Streamlit.setFrameHeight(tabsHeight))\r\n\r\n    //callback\r\n    const onClick = (key: string) => {\r\n        setActiveKey(key)\r\n        Streamlit.setComponentValue(return_index ? key : kv[key])\r\n    }\r\n\r\n    //listen index and stIndex\r\n    const prevIndex = useRef(props['index'])\r\n    const prevStValue = useRef(props['stValue'])\r\n    useEffect(() => {\r\n        const i = props['index']\r\n        const st_i = props['stValue']\r\n        if (i !== prevIndex.current && i !== null) {\r\n            setActiveKey(i);\r\n            Streamlit.setComponentValue(return_index ? i : kv[i]);\r\n            prevIndex.current = props['index']\r\n        }\r\n        if (st_i !== prevStValue.current) {\r\n            setActiveKey(st_i);\r\n            Streamlit.setComponentValue(return_index ? st_i : kv[st_i]);\r\n            prevStValue.current = props['stValue']\r\n        }\r\n    }, [props, kv, return_index])\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Tabs: {\r\n                        ...theme,\r\n                        itemActiveColor: primaryColor,\r\n                        itemHoverColor: primaryColor,\r\n                        itemSelectedColor: primaryColor,\r\n                        inkBarColor: primaryColor,\r\n                        colorTextDisabled: RgbaColor(textColor, 0.5),\r\n                        colorBgContainerDisabled: 'transform',\r\n                        cardBg: 'transparent',\r\n                        cardGutter: variant === 'outline' ? 0 : 2,\r\n                        cardHeight: getSize(size) + 25,\r\n                        colorBorderSecondary: 'transparent',\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            <Tabs\r\n                items={items}\r\n                defaultActiveKey={index}\r\n                activeKey={activeKey}\r\n                onTabClick={onClick}\r\n                type={variant === 'default' ? 'line' : 'card'}\r\n                tabPosition={position}\r\n                style={{height: tabsHeight}}\r\n            />\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default AntdTabs\r\n","import React from \"react\";\r\nimport {deepCopy, getSize} from \"./utils.react\"\r\nimport {CustomIcon} from \"../ts/utils\";\r\nimport {AntdTags} from \"../ts/Tag\";\r\n\r\n//recurve str property to react node\r\nconst strToNode = (obj, size) => {\r\n    return obj.map((item, idx) => {\r\n        let obj_copy = deepCopy(item)\r\n        obj_copy['key'] = idx\r\n        const icon = obj_copy['icon']\r\n        const tag = obj_copy['tag']\r\n        //add tag\r\n        if (tag) {\r\n            obj_copy.label = <div className={'d-flex align-items-center'}>\r\n                <div className={'mr-1'}>{obj_copy.label}</div>\r\n                <AntdTags\r\n                    items={Array.isArray(tag) ? tag : [tag]}\r\n                    align={'end'}\r\n                    size={getSize(size) - 4}\r\n                    style={{lineHeight: 1.2}}\r\n                />\r\n            </div>\r\n        }\r\n        //add icon\r\n        if (icon) {\r\n            obj_copy.label = <div className={'d-flex align-items-center'}>\r\n                <CustomIcon icon={icon} style={{marginRight: obj_copy.label ? 5 : 0}}/>\r\n                <div className={'d-flex  flex-grow-1'}>{obj_copy.label}\r\n                </div>\r\n            </div>\r\n        }\r\n        return obj_copy\r\n    })\r\n}\r\n\r\nexport {strToNode}","import React from \"react\";\r\nimport {deepCopy, getSize} from \"./utils.react\";\r\nimport {AntdTags} from \"../ts/Tag\";\r\nimport {CustomIcon} from \"../ts/utils\";\r\n\r\n//recurve str property to react node\r\nconst strToNode = (obj, size, variant, desc_color) => {\r\n    if (Array.isArray(obj)) {\r\n        return obj.map(obj_ => strToNode(obj_, size, variant, desc_color))\r\n    } else {\r\n        let obj_copy = deepCopy(obj);\r\n        const icon = obj_copy.icon;\r\n        const href = obj_copy.href;\r\n        const key = obj_copy.key;\r\n        const tag = obj_copy.tag;\r\n        const description = obj_copy.description;\r\n        const type = obj_copy.type;\r\n        obj_copy.key = String(key)\r\n        if (obj_copy.children) {\r\n            obj_copy.children = obj_copy.children.map(obj_ => strToNode(obj_, size, variant, desc_color))\r\n        }\r\n        //icon\r\n        obj_copy.icon = <CustomIcon icon={icon} style={{marginRight: 10, fontSize: getSize(size) + 3}}/>\r\n        //add description\r\n        if (description) {\r\n            obj_copy.label = <div style={{lineHeight: 1.3}}>\r\n                <div style={{wordBreak: 'break-word'}}>{obj_copy.label}</div>\r\n                <div className={'menu-desc'} style={{\r\n                    color: desc_color,\r\n                    fontSize: getSize(size) - 2,\r\n                    wordBreak: 'break-word',\r\n                    fontWeight: 'normal'\r\n                }}>{description}</div>\r\n            </div>\r\n        }\r\n        //add tag\r\n        if (tag) {\r\n            obj_copy.label = <div className={'d-flex align-items-center justify-content-between'}>\r\n                <div className={'mr-3'}>{obj_copy.label}</div>\r\n                <AntdTags\r\n                    items={Array.isArray(tag) ? tag : [tag]}\r\n                    align={'end'}\r\n                    size={getSize(size) - 2}\r\n                />\r\n            </div>\r\n        }\r\n        //add group icon\r\n        if (type === 'group' && icon) {\r\n            obj_copy.label = <div className={'d-flex align-items-center'}>\r\n                {obj_copy.icon}\r\n                <div style={{flexGrow: 1}}>{obj_copy.label}</div>\r\n            </div>\r\n        }\r\n        //add href\r\n        if (href) {\r\n            obj_copy.label =\r\n                <a href={href} target='_blank' rel='noreferrer' className={'text-decoration-none'}\r\n                   style={{color: 'inherit'}}>{obj_copy.label}</a>\r\n        }\r\n        return obj_copy\r\n    }\r\n}\r\n\r\n\r\nexport {strToNode}","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport type {MenuProps} from 'antd';\r\nimport {ConfigProvider, Menu} from 'antd';\r\nimport {strToNode} from \"../js/menu.react\";\r\nimport {\r\n    getCollapseKeys,\r\n    GetColor,\r\n    getHrefKeys,\r\n    getParentKeys,\r\n    getSize,\r\n    getTheme,\r\n    insertStyle,\r\n    reindex,\r\n    RgbaColor\r\n} from \"../js/utils.react\"\r\nimport '../css/menu.css'\r\nimport {BaseProp} from \"./utils\";\r\n\r\ninterface MenuProp extends BaseProp {\r\n    items: any[];\r\n    index: any;\r\n    open_index: any;\r\n    open_all: boolean;\r\n    variant: any\r\n    indent: any;\r\n    height: any;\r\n    return_index: boolean;\r\n    kv: any;\r\n    stValue: any\r\n}\r\n\r\n\r\nconst AntdMenu = (props: MenuProp) => {\r\n    //get data\r\n    const {color, font, backgroundColor, size, primaryColor, textColor, theme} = getTheme(props);\r\n\r\n    const items = strToNode(props.items, props.size, props.variant, RgbaColor(textColor, 0.5))\r\n    const dsk = reindex(props.index)\r\n    const openIndex = reindex(props.open_index)\r\n    const openAll = props['open_all']\r\n    const variant = props['variant']\r\n    const indent = props['indent']\r\n    const height = props['height']\r\n    const return_index = props['return_index']\r\n    const kv = props['kv']\r\n    const dok = openAll ? getCollapseKeys(items) : openIndex ? openIndex : dsk && getParentKeys(dsk, items)\r\n\r\n    const primaryLightColor = RgbaColor(primaryColor)\r\n    const bgColor = GetColor('--background-color')\r\n\r\n\r\n    //custom style\r\n    const textStyle = `\r\n    li.ant-menu-item.ant-menu-item-selected .menu-desc{\r\n        color: ${variant === 'filled' ? RgbaColor('#fff', 0.55) : 'none'} !important\r\n    }\r\n    .ant-menu-submenu-selected > .ant-menu-submenu-title{\r\n        color:${primaryColor} !important\r\n    }\r\n    .ant-menu-item-group-title{\r\n        margin: 4px !important;\r\n        padding: 0 16px 0 ${indent}px !important\r\n    }\r\n    .ant-menu-item-group-list>li{\r\n        padding-left: ${2 * indent}px !important\r\n    }\r\n    .ant-menu-item.ant-menu-item-selected{\r\n        border-left:${variant === 'left-bar' ? `4px solid ${primaryColor}` : 'unset'} !important;\r\n        border-right:${variant === 'right-bar' ? `4px solid ${primaryColor}` : 'unset'} !important;\r\n    }\r\n    .ant-menu-item{\r\n        border-left-style:${variant === 'left-bar' ? 'solid' : 'unset'} !important;\r\n        border-left-color:${variant === 'left-bar' ? 'transparent' : 'unset'} !important;\r\n        border-left-width:${variant === 'left-bar' ? `4px` : 'unset'} !important;\r\n        border-right-style:${variant === 'right-bar' ? 'solid' : 'unset'} !important;\r\n        border-right-color:${variant === 'right-bar' ? 'transparent' : 'unset'} !important;\r\n        border-right-width:${variant === 'right-bar' ? `4px` : 'unset'} !important;\r\n        padding-top: ${getSize(size) * 0.5}px;\r\n        padding-bottom: ${getSize(size) * 0.5}px;\r\n    }\r\n    .ant-menu-submenu-title {\r\n        padding-top: ${getSize(size) * 0.5}px;\r\n        padding-bottom: ${getSize(size) * 0.5}px;\r\n    }\r\n    `\r\n    insertStyle(`sac.menu.style`, textStyle)\r\n\r\n    //state\r\n    const [selectKey, setSelectKey] = useState(dsk)\r\n\r\n    //component height\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n    //listen index\r\n    const prevIndex = useRef(props['index'])\r\n    const prevStValue = useRef(props['stValue'])\r\n    useEffect(() => {\r\n        const i = props['index']\r\n        const st_i = props['stValue']\r\n        if (i !== prevIndex.current) {\r\n            setSelectKey(reindex(i));\r\n            Streamlit.setComponentValue(return_index ? i : kv[i]);\r\n            prevIndex.current = props['index']\r\n        }\r\n        if (st_i !== prevStValue.current) {\r\n            setSelectKey(reindex(st_i));\r\n            Streamlit.setComponentValue(return_index ? st_i : kv[st_i]);\r\n            prevStValue.current = props['stValue']\r\n        }\r\n    }, [props, kv, return_index])\r\n\r\n\r\n    //callback\r\n    const onSelect: MenuProps['onSelect'] = (e) => {\r\n        //only not href item will fire\r\n        let hrefKeys = getHrefKeys(items)\r\n        if (hrefKeys.indexOf(e.key) === -1) {\r\n            setSelectKey([e.key]);\r\n            Streamlit.setComponentValue(return_index ? Number(e.key) : kv[Number(e.key)]);\r\n        }\r\n    }\r\n    const onOpenChange: MenuProps['onOpenChange'] = (e) => {\r\n        const stValue = return_index ? Number(selectKey[0]) : kv[Number(selectKey[0])]\r\n        //set time to rerender\r\n        setTimeout(() => Streamlit.setComponentValue(stValue), 200)\r\n    }\r\n\r\n    // antd menu component\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Menu: {\r\n                        ...theme,\r\n                        itemBorderRadius: variant === 'left-bar' || variant === 'right-bar' ? 0 : 8,\r\n                        itemColor: 'var(--text-color)',\r\n                        groupTitleColor: RgbaColor(textColor, 0.5),\r\n                        itemDisabledColor: RgbaColor(textColor, 0.5),\r\n                        itemHoverColor: 'var(--text-color)',\r\n                        itemHoverBg: RgbaColor(textColor),\r\n                        itemActiveBg: RgbaColor(textColor, 0.25),\r\n                        itemSelectedColor: variant === 'filled' ? '#fff' : primaryColor,\r\n                        itemSelectedBg: variant === 'filled' ? primaryColor : variant === 'subtle' ? bgColor : primaryLightColor,\r\n                        subMenuItemBg: bgColor,\r\n                        itemBg: bgColor,\r\n                        colorSplit: RgbaColor(textColor),\r\n                        itemHeight: getSize(size) + 5,\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            <Menu\r\n                onSelect={onSelect}\r\n                onOpenChange={onOpenChange}\r\n                selectedKeys={selectKey}\r\n                style={{borderRightWidth: 0, height: height, overflowY: 'auto'}}\r\n                defaultSelectedKeys={dsk}\r\n                defaultOpenKeys={dok}\r\n                mode={'inline'}\r\n                items={items}\r\n                inlineIndent={indent}\r\n                className={'text-wrap text-break'}\r\n                subMenuCloseDelay={0}\r\n            />\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default AntdMenu\r\n","import React from \"react\";\r\nimport {deepCopy, getSize} from \"./utils.react\";\r\nimport {AntdTags} from \"../ts/Tag\";\r\nimport {ConfigProvider, Tooltip} from \"antd\";\r\nimport {CustomIcon} from \"../ts/utils\";\r\n\r\n//recurve str property to react node\r\nconst strToNode = (obj, size, treeIcon, desc_color) => {\r\n    if (Array.isArray(obj)) {\r\n        return obj.map(obj_ => strToNode(obj_, size, treeIcon, desc_color))\r\n    } else {\r\n        let obj_copy = deepCopy(obj);\r\n        const itemIcon = obj_copy.icon;\r\n        const tag = obj_copy.tag;\r\n        const description = obj_copy.description;\r\n        const tooltip = obj_copy.tooltip;\r\n        const icon = itemIcon != null ? itemIcon : treeIcon !== null ? treeIcon : null\r\n        if (obj_copy.children) {\r\n            obj_copy.children = obj_copy.children.map(obj_ => strToNode(obj_, size, treeIcon, desc_color))\r\n        }\r\n        //add description\r\n        if (description) {\r\n            obj_copy.label = <div style={{lineHeight: 1.2, wordBreak: 'break-word', whiteSpace: 'break-spaces'}}>\r\n                <div>{obj_copy.label}</div>\r\n                <div className={'tree-desc'}\r\n                     style={{color: desc_color, fontSize: getSize(size) - 2}}>{description}</div>\r\n            </div>\r\n        }\r\n        //add tag\r\n        if (tag) {\r\n            obj_copy.label = <div className={'d-flex align-items-center justify-content-between flex-grow-1'}>\r\n                <div className={'mr-3'}>{obj_copy.label}</div>\r\n                <AntdTags\r\n                    items={Array.isArray(tag) ? tag : [tag]}\r\n                    align={'end'}\r\n                    size={getSize(size) - 4}\r\n                />\r\n            </div>\r\n        }\r\n        //add icon\r\n        if (icon) {\r\n            obj_copy.label = <div className={'d-flex align-items-center'}>\r\n                <CustomIcon icon={icon} style={{marginRight: 5, alignSelf: 'start'}}/>\r\n                <div className={'d-flex  flex-grow-1'}>{obj_copy.label}\r\n                </div>\r\n            </div>\r\n        }\r\n        //add tooltip\r\n        if (tooltip) {\r\n            obj_copy.label = <ConfigProvider\r\n                theme={{\r\n                    components: {\r\n                        Tooltip: {\r\n                            colorBgSpotlight: 'var(--background-color)',\r\n                            colorTextLightSolid: 'var(--text-color)',\r\n                            borderRadius: 6,\r\n                            controlHeight: 12,\r\n                            fontSize: getSize(size) - 4,\r\n                        },\r\n                    },\r\n                }}\r\n            >\r\n                <Tooltip\r\n                    title={tooltip}\r\n                    placement={'bottomLeft'}\r\n                    arrow={false}\r\n                    overlayInnerStyle={{padding: '2px 6px', border: `1px solid ${desc_color}`}}\r\n                >\r\n                    {obj_copy.label}\r\n                </Tooltip>\r\n            </ConfigProvider>\r\n        }\r\n        obj_copy['title'] = obj_copy.label\r\n        delete obj_copy.label\r\n        delete obj_copy.icon\r\n        return obj_copy\r\n    }\r\n}\r\n\r\n\r\nexport {strToNode}","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport type {TreeProps} from 'antd/es/tree';\r\nimport {ConfigProvider, Tree} from 'antd';\r\nimport {CaretDownFilled} from '@ant-design/icons';\r\nimport {strToNode} from \"../js/tree.react\";\r\nimport {getCollapseKeys, getParentKeys, getSize, getTheme, insertStyle, reindex, RgbaColor} from \"../js/utils.react\"\r\nimport '../css/tree.css'\r\nimport {BaseProp, LabelWrap} from \"./utils\";\r\n\r\ninterface TreeProp extends BaseProp {\r\n    label: any\r\n    description: any\r\n    items: any[]\r\n    index: any\r\n    icon: any\r\n    align: any\r\n    width: any\r\n    height: any\r\n    open_index: any\r\n    open_all: boolean\r\n    checkbox: boolean\r\n    checkbox_strict: boolean\r\n    show_line: boolean\r\n    return_index: boolean;\r\n    kv: any;\r\n}\r\n\r\nconst AntdTree = (props: TreeProp) => {\r\n    //get data\r\n    const {color, font, backgroundColor, size, primaryColor, textColor, theme} = getTheme(props);\r\n\r\n    const label = props['label']\r\n    const description = props['description']\r\n    const items = strToNode(props.items, size, props.icon, RgbaColor(textColor, 0.5))\r\n    const dsk = reindex(props.index, false)\r\n    const openIndex = reindex(props.open_index, false)\r\n    const openAll = props['open_all']\r\n    const height = props['height']\r\n    const width = props['width']\r\n    const align = props['align']\r\n    const checkable = props['checkbox']\r\n    const checkStrictly = props['checkbox_strict']\r\n    const showLine = props['show_line']\r\n    const return_index = props['return_index']\r\n    const kv = props['kv']\r\n    const dok = openAll ? getCollapseKeys(items) : openIndex ? openIndex : dsk && getParentKeys(dsk, items)\r\n    const primaryLightColor = RgbaColor(primaryColor)\r\n\r\n    //state\r\n    const [value, setValue] = useState(dsk)\r\n\r\n    // component height\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n    const textStyle = `\r\n    span.ant-tree-node-content-wrapper.ant-tree-node-selected {\r\n        color: ${primaryColor};\r\n    }\r\n    .ant-tree-switcher-icon {\r\n        font-size: ${getSize(size) - 2}px !important;\r\n    }\r\n    .ant-tree-title{\r\n        line-height:${getSize(size) + 2}px !important\r\n    }\r\n    .ant-tree-checkbox-indeterminate .ant-tree-checkbox-inner:after{\r\n        width:50% !important;\r\n        height:50% !important;\r\n    }\r\n    `\r\n    insertStyle(`sac.tree.style`, textStyle)\r\n\r\n    //callback\r\n    const onExpand: TreeProps['onExpand'] = (e) => {\r\n        Streamlit.setComponentValue(value.map((x: any) => return_index ? x : kv[x]));\r\n    };\r\n    const onSelect: TreeProps['onSelect'] = (selectedKeys_, info) => {\r\n        setValue(selectedKeys_)\r\n        Streamlit.setComponentValue(checkable ?\r\n            selectedKeys_.map((x: any) => return_index ? x : kv[x]) :\r\n            return_index ? selectedKeys_[0] : kv[selectedKeys_[0]]);\r\n    };\r\n    const onCheck: TreeProps['onCheck'] = (checkedKeys_, info) => {\r\n        let ck = (Array.isArray(checkedKeys_)) ? checkedKeys_ : checkedKeys_['checked']\r\n        setValue(ck)\r\n        Streamlit.setComponentValue(ck.map((x: any) => return_index ? x : kv[x]))\r\n    }\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Tree: {\r\n                        ...theme,\r\n                        colorPrimaryHover: primaryColor,\r\n                        colorBgContainer: 'transform',\r\n                        colorTextDisabled: RgbaColor(textColor, 0.5),\r\n                        controlItemBgHover: RgbaColor(textColor),\r\n                        controlItemBgActive: primaryLightColor,\r\n                        controlInteractiveSize: getSize(size) + 2,\r\n                        colorBorder: RgbaColor(textColor, 0.4),\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            <LabelWrap\r\n                label={label}\r\n                desc={description}\r\n                size={size}\r\n                align={align}\r\n                children={\r\n                    <Tree\r\n                        onSelect={onSelect}\r\n                        onCheck={onCheck}\r\n                        onExpand={onExpand}\r\n                        selectedKeys={value}\r\n                        checkedKeys={value}\r\n                        defaultSelectedKeys={dsk}\r\n                        defaultCheckedKeys={dsk}\r\n                        defaultExpandedKeys={dok}\r\n                        treeData={items}\r\n                        showLine={showLine}\r\n                        checkable={checkable}\r\n                        selectable={!checkable}\r\n                        height={height}\r\n                        checkStrictly={checkStrictly}\r\n                        switcherIcon={<CaretDownFilled/>}\r\n                        blockNode={true}\r\n                        virtual={false}\r\n                        style={{\r\n                            whiteSpace: 'nowrap', overflowX: 'auto', overflowY: 'hidden', width: width\r\n                        }}\r\n                    />\r\n                }\r\n            />\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default AntdTree\r\n","import React from \"react\";\r\nimport {deepCopy} from \"./utils.react\";\r\nimport {CustomIcon} from \"../ts/utils\";\r\n\r\n//recurve str property to react node\r\nconst strToNode = (obj) => {\r\n    if (Array.isArray(obj)) {\r\n        return obj.map(obj_ => strToNode(obj_))\r\n    } else {\r\n        let obj_copy = deepCopy(obj);\r\n        const icon = obj_copy.icon;\r\n        const label = obj_copy.label;\r\n        if (obj_copy.children != null) {\r\n            obj_copy.children = obj_copy.children.map(obj_ => strToNode(obj_))\r\n        }\r\n        if (icon) {\r\n            obj_copy.label = <span key={obj_copy.value}><CustomIcon icon={icon} style={{marginRight: 5}}/>{label}</span>\r\n        } else {\r\n            obj_copy.label = <span key={obj_copy.value}>{label}</span>\r\n        }\r\n        obj_copy['rawLabel'] = label\r\n        return obj_copy\r\n    }\r\n}\r\n\r\nexport {strToNode}","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Cascader, ConfigProvider} from 'antd';\r\nimport {CaretDownFilled, CaretRightFilled} from '@ant-design/icons';\r\nimport type {DefaultOptionType} from 'antd/es/cascader';\r\nimport {strToNode} from \"../js/cascader.react\";\r\nimport {getTheme, insertStyle, reindex, RgbaColor} from \"../js/utils.react\"\r\nimport '../css/cascader.css'\r\nimport {BaseProp, LabelWrap} from \"./utils\";\r\n\r\ninterface CascaderProp extends BaseProp {\r\n    label: any\r\n    description: any\r\n    items: any[]\r\n    index: any\r\n    placeholder: any\r\n    disabled: boolean\r\n    clear: boolean\r\n    search: boolean\r\n    multiple: boolean\r\n    strict: boolean\r\n    return_index: boolean;\r\n    kv: any;\r\n}\r\n\r\nconst AntdCascader = (props: CascaderProp) => {\r\n    //get data\r\n    const {color, font, backgroundColor, size, primaryColor, textColor, theme} = getTheme(props);\r\n\r\n    const label = props['label']\r\n    const description = props['description']\r\n    const items = strToNode(props.items)\r\n    const index = reindex(props['index'], false)\r\n    const placeholder = props['placeholder']\r\n    const multiple = props['multiple']\r\n    const disabled = props['disabled']\r\n    const search = props['search']\r\n    const allowClear = props['clear']\r\n    const strict = props['strict']\r\n    const return_index = props['return_index']\r\n    const kv = props['kv']\r\n\r\n    // const color = props['color']\r\n    // const font = getFont(props)\r\n    // const background_color = getBackgroundColor(props)\r\n    // const size = getSize(props)\r\n    // const primaryColor = GetColor(color == null ? '--primary-color' : color)\r\n    // const textColor = GetColor('--text-color')\r\n\r\n    // load css\r\n    let borderStyle = `\r\n        /*dropdown border*/\r\n        .ant-select-dropdown {\r\n            border: 1px solid ${RgbaColor(textColor, 0.1)};\r\n        }\r\n        /*vertical border*/\r\n        ul.ant-cascader-menu:not(:last-child) {\r\n            border-inline-end: 1px solid ${RgbaColor(textColor, 0.1)} !important;\r\n        }\r\n        .ant-cascader-menu-item-active .ant-cascader-menu-item-content{\r\n            color:${primaryColor} !important\r\n        }\r\n    `\r\n    let checkboxStyle = `\r\n        .ant-select-selection-item{\r\n            color: rgb(255, 255, 255);\r\n        }\r\n    `\r\n    insertStyle('sac.cascader.style', multiple ? borderStyle + checkboxStyle : borderStyle)\r\n\r\n    //state\r\n    const [height, setHeight] = useState()\r\n\r\n    // component height\r\n    useEffect(() => Streamlit.setFrameHeight(height))\r\n\r\n    //callback\r\n    const onChange = (value: any) => {\r\n        let v = value === undefined ? [] : value\r\n        let flatten_value = Array.from(new Set(v.flat())).sort()\r\n        const st = flatten_value.map((x: any) => return_index ? x : kv[x])\r\n        Streamlit.setComponentValue(st)\r\n    }\r\n    const dropdownVisible = (visible: boolean) => {\r\n        let labelHeight = label !== null ? 30 : 0\r\n        // @ts-ignore\r\n        setHeight(visible ? 230 + labelHeight : undefined)\r\n    }\r\n\r\n    //search\r\n    const filter = (inputValue: string, path: DefaultOptionType[]) => {\r\n        return path.some(\r\n            (option) => (option.rawLabel as string).toLowerCase().indexOf(inputValue.toLowerCase()) > -1,\r\n        )\r\n    }\r\n    // search not found\r\n    const notFoundContent = () => {\r\n        return <div style={{\r\n            textAlign: 'center',\r\n            color: RgbaColor(textColor, 0.5),\r\n            padding: '70px 0'\r\n        }}>No results</div>\r\n    }\r\n\r\n    //display render\r\n    const displayRender = (labels: string[], selectedOptions?: DefaultOptionType[] | undefined) =>\r\n        labels.map((label, i) => {\r\n            if (selectedOptions !== undefined) {\r\n                const option = selectedOptions[i];\r\n                if (option !== null && option !== undefined) {\r\n                    if (i === labels.length - 1) {\r\n                        return (\r\n                            <span key={option.value}>{option.rawLabel}</span>\r\n                        );\r\n                    }\r\n                    return <span key={option.value}>{option.rawLabel} / </span>;\r\n                }\r\n            }\r\n            return <span/>\r\n        })\r\n\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Cascader: {\r\n                        ...theme,\r\n                        colorBgContainer: 'var(--background-color)',\r\n                        controlItemBgHover: 'var(--secondary-background-color)',\r\n                        controlItemBgActive: RgbaColor(primaryColor),\r\n                        colorPrimaryHover: primaryColor,\r\n                        colorTextDisabled: RgbaColor(textColor, 0.5),\r\n                        colorBorder: RgbaColor(textColor, 0.3),\r\n\r\n                    },\r\n                    Select: {\r\n                        ...theme,\r\n                        colorBgContainer: 'var(--secondary-background-color)',\r\n                        colorBgElevated: 'var(--background-color)',\r\n                        colorBorder: 'var(--background-color) !important',\r\n                        colorFillSecondary: primaryColor,\r\n                        colorText: 'var(--text-color)',\r\n                        colorTextPlaceholder: RgbaColor(textColor, 0.5),\r\n                        colorIcon: '#fff',\r\n                        colorIconHover: '#fff',\r\n                        controlHeight: 40,\r\n                        controlOutlineWidth: 0,\r\n                        lineHeight: 1.6,\r\n                        borderRadius: 8,\r\n                        colorBgContainerDisabled: 'var(--secondary-background-color)',\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            <LabelWrap\r\n                label={label}\r\n                desc={description}\r\n                grow={true}\r\n                children={\r\n                    <Cascader\r\n                        options={items}\r\n                        onChange={onChange}\r\n                        placeholder={placeholder}\r\n                        multiple={multiple}\r\n                        disabled={disabled}\r\n                        allowClear={allowClear}\r\n                        showSearch={search && {filter}}\r\n                        dropdownMatchSelectWidth={true}\r\n                        style={{width: '100%'}}\r\n                        suffixIcon={<CaretDownFilled/>}\r\n                        expandIcon={<CaretRightFilled/>}\r\n                        maxTagCount={'responsive'}\r\n                        maxTagTextLength={13}\r\n                        defaultValue={index}\r\n                        popupClassName={'shadow-none'}\r\n                        onDropdownVisibleChange={dropdownVisible}\r\n                        notFoundContent={notFoundContent()}\r\n                        displayRender={displayRender}\r\n                        expandTrigger={'click'}\r\n                        showCheckedStrategy={strict ? Cascader.SHOW_PARENT : Cascader.SHOW_CHILD}\r\n                    />\r\n                }\r\n            />\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default AntdCascader\r\n","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect} from \"react\";\r\nimport {Divider} from '@mantine/core';\r\nimport {getTheme, markdown, RgbaColor} from \"../js/utils.react\"\r\nimport {BaseProp, CustomIcon} from \"./utils\";\r\nimport {ConfigProvider} from \"antd\";\r\n\r\ninterface DividerProp extends BaseProp {\r\n    label: any\r\n    icon: any\r\n    align: any\r\n    variant: any\r\n}\r\n\r\nconst AntdDivider = (props: DividerProp) => {\r\n    //get data\r\n    const label = props['label'];\r\n    const icon = props['icon'];\r\n    // @ts-ignore\r\n    const align = {'start': 'left', 'center': 'center', 'end': 'right'}[props['align']]\r\n    const variant = props['variant'];\r\n    const {color, font, backgroundColor, size, primaryColor, textColor, theme} = getTheme(props);\r\n\r\n    // component height\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Divider: {\r\n                        ...theme,\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            <Divider\r\n                color={color == null ? RgbaColor(textColor) : color}\r\n                label={icon ?\r\n                    <span className={'d-flex align-items-center'}>\r\n                    <CustomIcon icon={icon} style={{marginRight: 5}}/>{markdown(label)}\r\n                </span> : markdown(label)}\r\n                labelPosition={align}\r\n                size={size}\r\n                variant={variant}\r\n            />\r\n        </ConfigProvider>\r\n\r\n    );\r\n};\r\n\r\nexport default AntdDivider\r\n","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {Switch} from '@mantine/core';\r\nimport {GetColor, getSize, getTheme, markdown, parseIcon, RgbaColor} from \"../js/utils.react\"\r\nimport {BaseProp} from \"./utils\";\r\n\r\ninterface SwitchProp extends BaseProp {\r\n    label: any;\r\n    value: any;\r\n    description: any;\r\n    on_label: any;\r\n    off_label: any;\r\n    align: any\r\n    position: 'left' | 'right';\r\n    size: any\r\n    on_color: any\r\n    off_color: any\r\n    radius: any\r\n    disabled: any;\r\n    key: string | undefined;\r\n    stValue: any\r\n}\r\n\r\nconst AntdSwitch = (props: SwitchProp) => {\r\n    //get data\r\n    const {color, font, backgroundColor, size, primaryColor, textColor, theme} = getTheme(props);\r\n\r\n    const label = props['label']\r\n    const value = props['value']\r\n    const description = props['description']\r\n    const onLabel = parseIcon(props['on_label'])\r\n    const offLabel = parseIcon(props['off_label'])\r\n    const align = props['align']\r\n    const position = props['position']\r\n    const onColor = props['on_color']\r\n    const offColor = props['off_color']\r\n    const radius = props['radius']\r\n    const disabled = props['disabled']\r\n    const key = props['key']\r\n    const secondaryBgColor = GetColor(offColor == null ? RgbaColor(textColor) : offColor)\r\n\r\n    const [checked, setChecked] = useState(value)\r\n\r\n\r\n    // set component height\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n    //callback\r\n    const onChange = (event: any) => {\r\n        const v = event.currentTarget.checked;\r\n        setChecked(v)\r\n        Streamlit.setComponentValue(v)\r\n    }\r\n\r\n    //listen index\r\n    const prevStValue = useRef(props['stValue'])\r\n    useEffect(() => {\r\n        const st_i = props['stValue']\r\n        if (String(st_i) !== String(prevStValue.current)) {\r\n            setChecked(st_i);\r\n            prevStValue.current = props['stValue']\r\n        }\r\n    }, [props])\r\n\r\n    return (\r\n        <div className={`d-flex justify-content-${align}`}>\r\n            <Switch\r\n                id={key}\r\n                label={markdown(label)}\r\n                color={onColor}\r\n                description={markdown(description)}\r\n                labelPosition={position}\r\n                onLabel={onLabel}\r\n                offLabel={offLabel}\r\n                disabled={disabled}\r\n                size={size}\r\n                checked={checked}\r\n                onChange={onChange}\r\n                radius={radius}\r\n                styles={(theme) => ({\r\n                    label: {\r\n                        color: 'var(--text-color)',\r\n                        marginBottom: 0,\r\n                    },\r\n                    description: {\r\n                        color: RgbaColor(textColor, 0.5)\r\n                    },\r\n                    trackLabel: {\r\n                        fontSize: getSize(size) - 2,\r\n                        color: '#fff',\r\n                    },\r\n                    track: {\r\n                        cursor: 'pointer',\r\n                        'input:checked+&': !disabled ? {\r\n                            backgroundColor: primaryColor,\r\n                            borderColor: primaryColor,\r\n                        } : {},\r\n                        backgroundColor: secondaryBgColor,\r\n                        borderColor: 'transparent',\r\n                    }\r\n                })}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AntdSwitch\r\n","//recurve str property to react node\r\nconst strToNode = (obj) => {\r\n    if (Array.isArray(obj)) {\r\n        return obj.map(obj_ => strToNode(obj_))\r\n    } else {\r\n        return {'key': String(obj['key']), 'title': obj['titleFormatter']}\r\n    }\r\n}\r\nconst numberToStr = (obj) => {\r\n    if (obj===null){\r\n        return []\r\n    }\r\n    return obj.map((x)=>String(x))\r\n}\r\n\r\nexport {strToNode,numberToStr}","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Button, ConfigProvider, Transfer} from 'antd';\r\nimport {ReloadOutlined} from '@ant-design/icons';\r\nimport type {TransferDirection, TransferListProps} from 'antd/es/transfer';\r\nimport {DarkenColor, GetColor, getTheme, insertStyle, RgbaColor} from \"../js/utils.react\"\r\nimport {numberToStr, strToNode} from \"../js/transfer.react\";\r\nimport '../css/transfer.css'\r\nimport {BaseProp, LabelWrap} from \"./utils\";\r\n\r\ninterface TransferProp extends BaseProp {\r\n    label: any\r\n    description: any\r\n    items: any[]\r\n    index: any\r\n    titles: any\r\n    search: boolean\r\n    pagination: boolean\r\n    oneway: boolean\r\n    align: any\r\n    reload: boolean | string\r\n    disabled: boolean\r\n    width: number\r\n    height: number\r\n    use_container_width: boolean\r\n    return_index: boolean;\r\n    kv: any;\r\n}\r\n\r\n\r\nconst AntdTransfer = (props: TransferProp) => {\r\n    //get data\r\n    const {color, font, backgroundColor, size, primaryColor, textColor, theme} = getTheme(props);\r\n\r\n    const label = props['label']\r\n    const description = props['description']\r\n    const items = strToNode(props['items'])\r\n    const index = numberToStr(props['index'])\r\n    const titles = props['titles']\r\n    const search = props['search']\r\n    const pagination = props['pagination']\r\n    const oneway = props['oneway']\r\n    const align = props['align']\r\n    const reload = props['reload']\r\n    const disabled = props['disabled']\r\n    const width = props['width']\r\n    const height = props['height']\r\n    const grow = props['use_container_width']\r\n    const return_index = props['return_index']\r\n    const kv = props['kv']\r\n    const secondaryBgColor = GetColor('--secondary-background-color')\r\n\r\n    //data source\r\n    const [dataSource, setDataSource] = useState(items)\r\n    //target keys\r\n    const [targetKeys, setTargetKeys] = useState(index);\r\n\r\n    //callback\r\n    const onChange = (nextTargetKeys: string[], direction: TransferDirection, moveKeys: string[]) => {\r\n        setTargetKeys(nextTargetKeys);\r\n        Streamlit.setComponentValue(nextTargetKeys.map((x) => return_index ? Number(x) : kv[Number(x)]));\r\n    };\r\n    const onSearch = (dir: TransferDirection, value: string) => {\r\n        Streamlit.setComponentValue(targetKeys.map((x: any) => return_index ? Number(x) : kv[Number(x)]))\r\n    };\r\n    const reset = () => {\r\n        setDataSource(items)\r\n        setTargetKeys(index)\r\n        Streamlit.setComponentValue(props['index'].map((x: any) => return_index ? x : kv[x]))\r\n    }\r\n\r\n    //footer\r\n    const renderFooter = (\r\n        _: TransferListProps<any>,\r\n        info?: {\r\n            direction: TransferDirection;\r\n        },\r\n    ) => {\r\n        let float = info !== undefined ? info.direction : 'left'\r\n        return (\r\n            <ConfigProvider\r\n                theme={{\r\n                    components: {\r\n                        Button: {\r\n                            ...theme,\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                <Button size=\"small\" type={'primary'} style={{float: `${float}`, margin: 5}} onClick={reset}\r\n                        icon={<ReloadOutlined/>}>\r\n                    {typeof (reload) == 'boolean' ? 'Reload' : reload}\r\n                </Button>\r\n            </ConfigProvider>\r\n        );\r\n    };\r\n\r\n    // component height\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n    let textStyle = `\r\n    .ant-transfer-list-content-item-remove:hover{\r\n        color: ${primaryColor} !important;\r\n    }\r\n    `\r\n    insertStyle('sac.transfer.style', textStyle)\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Transfer: {\r\n                        colorBgContainer: 'transform',\r\n                        colorBorder: RgbaColor(textColor),\r\n                        colorText: 'var(--text-color)',\r\n                        colorTextDisabled: RgbaColor(textColor, 0.5),\r\n                        controlItemBgHover: RgbaColor(textColor),\r\n                        controlItemBgActive: 'transform',\r\n                        controlItemBgActiveHover: 'transform',\r\n                        fontFamily: 'var(--font)',\r\n                    },\r\n                    Button: {\r\n                        colorPrimary: primaryColor,\r\n                        colorPrimaryHover: primaryColor,\r\n                        colorPrimaryActive: DarkenColor(primaryColor, 0.1),\r\n                        colorTextDisabled: RgbaColor(textColor, 0.5),\r\n                        colorBgContainerDisabled: RgbaColor(textColor, 0.1),\r\n                    },\r\n                    Checkbox: {\r\n                        colorPrimary: primaryColor,\r\n                        colorPrimaryActive: primaryColor,\r\n                        colorPrimaryHover: primaryColor,\r\n                        colorBgContainer: 'transform',\r\n                        colorBorder: RgbaColor(textColor, 0.3),\r\n                    },\r\n                    Input: {\r\n                        colorBgContainer: 'inherit',\r\n                        colorBorder: RgbaColor(textColor),\r\n                        colorPrimaryHover: primaryColor,\r\n                        activeBorderColor: primaryColor,\r\n                        controlOutlineWidth: 0,\r\n                        colorTextPlaceholder: RgbaColor(textColor, 0.5),\r\n                    },\r\n                    Pagination: {\r\n                        colorText: 'var(--text-color)',\r\n                        colorBgContainer: 'inherit',\r\n                        colorBorder: RgbaColor(textColor),\r\n                        colorPrimary: primaryColor,\r\n                        colorPrimaryHover: primaryColor,\r\n                        controlOutlineWidth: 0,\r\n                        colorTextDisabled: RgbaColor(textColor)\r\n                    },\r\n                    Dropdown: {\r\n                        colorBgElevated: GetColor('--background-color'),\r\n                        colorText: 'var(--text-color)',\r\n                        controlItemBgHover: secondaryBgColor,\r\n                        boxShadowSecondary: `0 0 10px ${secondaryBgColor}, 0 0 6px ${secondaryBgColor}`,\r\n                    },\r\n                    Empty: {\r\n                        colorTextDisabled: RgbaColor(textColor, 0.3),\r\n                    }\r\n                },\r\n            }}\r\n        >\r\n            <LabelWrap\r\n                label={label}\r\n                desc={description}\r\n                align={align}\r\n                grow={grow}\r\n                style={{overflowX: 'auto'}}\r\n                children={\r\n                    <Transfer\r\n                        dataSource={dataSource}\r\n                        titles={titles}\r\n                        targetKeys={targetKeys}\r\n                        onChange={onChange}\r\n                        onSearch={onSearch}\r\n                        render={(item: any) => item.title}\r\n                        showSearch={search}\r\n                        showSelectAll={true}\r\n                        pagination={pagination}\r\n                        oneWay={oneway}\r\n                        disabled={disabled}\r\n                        listStyle={{\r\n                            width: grow ? '100%' : width,\r\n                            height: height,\r\n                            minHeight: 200 + (search ? 60 : 0) + (reload ? 40 : 0)\r\n                        }}\r\n                        footer={typeof (reload) == 'string' || String(reload) === 'true' ? renderFooter : undefined}\r\n                    />\r\n                }\r\n            />\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default AntdTransfer\r\n","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {SegmentedControl} from '@mantine/core';\r\nimport {strToNode} from \"../js/segmented.react\";\r\nimport {getTheme} from \"../js/utils.react\"\r\nimport \"../css/segmented.css\"\r\nimport {BaseProp, LabelWrap} from \"./utils\";\r\n\r\ninterface SegmentedProp extends BaseProp {\r\n    items: any[];\r\n    index: number;\r\n    label: string;\r\n    description: string;\r\n    radius: any;\r\n    align: any;\r\n    direction: any;\r\n    disabled: boolean;\r\n    divider: boolean;\r\n    use_container_width: boolean;\r\n    readonly: boolean;\r\n    return_index: boolean;\r\n    kv: any;\r\n    stValue: any\r\n}\r\n\r\n\r\nconst AntdSegmented = (props: SegmentedProp) => {\r\n    //get data\r\n    const {color, font, backgroundColor, size, primaryColor, textColor, theme} = getTheme(props);\r\n\r\n    const items = strToNode(props['items'])\r\n    const index = String(props['index'])\r\n    const label = props['label']\r\n    const description = props['description']\r\n    const radius = props['radius']\r\n    const align = props['align']\r\n    const direction = props['direction']\r\n    const disabled = props['disabled']\r\n    const divider = props['divider']\r\n    const grow = props['use_container_width']\r\n    const readonly = props['readonly']\r\n    const return_index = props['return_index']\r\n    const kv = props['kv']\r\n\r\n\r\n    // component height\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n    const [value, setValue] = useState(index)\r\n\r\n    //callback\r\n    const onChange = (value: string) => {\r\n        setValue(value)\r\n        Streamlit.setComponentValue(return_index ? Number(value) : kv[Number(value)])\r\n    }\r\n\r\n    //listen index and stIndex\r\n    const prevIndex = useRef(props['index'])\r\n    const prevStValue = useRef(props['stValue'])\r\n    useEffect(() => {\r\n        const i = props['index']\r\n        const st_i = props['stValue']\r\n        if (i !== prevIndex.current && i !== null) {\r\n            setValue(String(i));\r\n            Streamlit.setComponentValue(return_index ? Number(i) : kv[Number(i)]);\r\n            prevIndex.current = props['index']\r\n        }\r\n        if (st_i !== prevStValue.current) {\r\n            setValue(String(st_i));\r\n            Streamlit.setComponentValue(return_index ? Number(st_i) : kv[Number(st_i)]);\r\n            prevStValue.current = props['stValue']\r\n        }\r\n    }, [props, kv, return_index])\r\n\r\n    return <LabelWrap\r\n        label={label}\r\n        desc={description}\r\n        size={size}\r\n        align={align}\r\n        grow={grow}\r\n        children={\r\n            <SegmentedControl\r\n                color={color}\r\n                data={items}\r\n                defaultValue={index}\r\n                onChange={onChange}\r\n                value={value}\r\n                fullWidth={grow}\r\n                disabled={disabled}\r\n                size={typeof (size) == 'number' ? 'md' : size}\r\n                radius={radius}\r\n                orientation={direction}\r\n                readOnly={readonly}\r\n                className={'d-flex flex-wrap'}\r\n                styles={(theme) => ({\r\n                    root: {\r\n                        backgroundColor: backgroundColor == null ? 'var(--secondary-background-color)' :\r\n                            Object.keys(theme.colors).indexOf(backgroundColor) !== -1 ? theme.colors[backgroundColor][1] : backgroundColor,\r\n                    },\r\n                    label: {\r\n                        fontSize: typeof (size) == 'number' ? size : undefined,\r\n                        display: \"flex\", alignItems: 'center', justifyContent: 'center',\r\n                        color: 'var(--text-color)',\r\n                        marginBottom: 0,\r\n                        '&:hover': {\r\n                            color: 'var(--text-color)'\r\n                        },\r\n                        '&[data-active]': {\r\n                            color: '#fff'\r\n                        },\r\n                        '&[data-active]:hover': {\r\n                            color: '#fff'\r\n                        },\r\n                    },\r\n                    indicator: {\r\n                        backgroundColor: primaryColor,\r\n                    },\r\n                    control: {\r\n                        '&:not(:first-of-type)': {\r\n                            borderStyle: divider ? \"solid\" : 'none'\r\n                        }\r\n                    }\r\n                })}\r\n            />\r\n        }\r\n    />\r\n};\r\n\r\nexport default AntdSegmented\r\n","import {deepCopy} from \"./utils.react\";\r\nimport React from \"react\";\r\nimport {CustomIcon} from \"../ts/utils\";\r\n\r\nconst strToNode = (obj) => {\r\n    return obj.map((item, idx) => {\r\n        let item_ = deepCopy(item)\r\n        if (item_['icon'] != null) {\r\n            if (item_['label'].length > 0) {\r\n                item_['label'] = <>\r\n                    <CustomIcon icon={item.icon} style={{marginRight:10}}/>\r\n                    {item_['label']}\r\n                </>\r\n            } else {\r\n                item_['label'] = <CustomIcon icon={item.icon}/>\r\n            }\r\n        }\r\n        if (item_['href'] != null) {\r\n            item_['label'] = <a href={item_['href']} target={'_blank'} rel={'noreferrer'}>{item_['label']}</a>\r\n        }\r\n        item_['value'] = String(item_['value'])\r\n        return item_\r\n    })\r\n}\r\n\r\nexport {strToNode}","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect} from \"react\";\r\nimport {Alert, ConfigProvider} from 'antd';\r\nimport {GetColor, getSize, getTheme, insertStyle, markdown, MartineRadiusSize, RgbaColor} from \"../js/utils.react\";\r\nimport Marquee from \"react-fast-marquee\";\r\nimport {BaseProp, CustomIcon} from \"./utils\";\r\n\r\ninterface AlertProp extends BaseProp {\r\n    label: string;\r\n    description: string;\r\n    radius: any\r\n    variant: any\r\n    icon: any\r\n    closable: boolean;\r\n    banner: boolean | boolean[] | any;\r\n}\r\n\r\nconst AntdAlert = (props: AlertProp) => {\r\n    //get data\r\n    const message = props['label']\r\n    const description = props['description']\r\n    const radius = props['radius']\r\n    const variant = props['variant']\r\n    const icon = props['icon']\r\n    const closable = props['closable']\r\n    const banner = props['banner']\r\n    const {color, font, backgroundColor, size, primaryColor, textColor, theme} = getTheme(props);\r\n\r\n    const colorList: any = {\r\n        'info': {'primary': 'rgb(0, 66, 128)', 'lighten': 'rgba(28, 131, 225, 0.1)'},\r\n        'success': {'primary': 'rgb(23, 114, 51)', 'lighten': 'rgba(33, 195, 84, 0.1)'},\r\n        'warning': {'primary': 'rgb(146, 108, 5)', 'lighten': 'rgba(255, 227, 18, 0.1)'},\r\n        'error': {'primary': 'rgb(125, 53, 59)', 'lighten': 'rgba(255, 43, 43, 0.09)'},\r\n    }\r\n\r\n    // component height\r\n    useEffect(() => {\r\n        setTimeout(() => Streamlit.setFrameHeight(), 0.001)\r\n    })\r\n\r\n    const getStyle = (color: any, size: any) => {\r\n        let element, primary, lighten;\r\n        if (Object.keys(colorList).indexOf(color) !== -1) {\r\n            element = color\r\n            primary = colorList[color].primary\r\n            lighten = colorList[color].lighten\r\n        } else {\r\n            element = 'info'\r\n            primary = GetColor(color)\r\n            lighten = RgbaColor(primary)\r\n        }\r\n        return `\r\n        .ant-alert.ant-alert-${element}{\r\n            color: ${variant === 'filled' ? '#fff' : primary};\r\n            background: ${variant === 'filled' ? primary : variant === 'light' || variant === 'quote-light' ? lighten : 'transparent'};\r\n        }\r\n        .ant-alert.ant-alert-${element} .ant-alert-message{\r\n            color: ${variant === 'filled' ? '#fff' : primary};\r\n        }\r\n        .ant-alert.ant-alert-${element} .anticon.anticon-close{\r\n            color: ${variant === 'filled' ? '#fff' : primary};\r\n            font-size: ${getSize(size) * 0.8}px;\r\n        }\r\n        .ant-alert-${element} .ant-alert-icon{\r\n            color: ${variant === 'filled' ? '#fff' : primary};\r\n            font-size: ${getSize(size) + 8}px;\r\n        }\r\n        .ant-alert{\r\n            border: ${variant === 'outline' ? `1px solid ${primary}` : 0} !important;\r\n            border-left:${variant === 'quote' || variant === 'quote-light' ? `4px solid ${primary}` : '1'} !important;\r\n            border-top-left-radius:${variant === 'quote' || variant === 'quote-light' ? 0 : 'none'} !important;\r\n            border-bottom-left-radius:${variant === 'quote' || variant === 'quote-light' ? 0 : 'none'} !important;\r\n        }\r\n        .ant-alert-description{\r\n            color: ${variant === 'filled' ? '#fff' : GetColor('--text-color')} !important;\r\n        }\r\n        .ant-alert-message{\r\n            font-size:${getSize(size)}px !important;\r\n        }\r\n        `\r\n    }\r\n    insertStyle(`sac.alert.style`, getStyle(color, size))\r\n\r\n    const getPlay = (b: any) => {\r\n        return typeof (b) === 'boolean' ? b : b['play']\r\n    }\r\n\r\n    const getBanner = (ban: any) => {\r\n        if (Array.isArray(ban)) {\r\n            //total banner,message banner,description banner\r\n            const db = ban.length === 1 ? ban[0] : ban[1]\r\n            return [Boolean(getPlay(ban[0]) || getPlay(ban[1])), ban[0], db]\r\n        } else {\r\n            return [getPlay(ban), ban, ban]\r\n        }\r\n    }\r\n    const [totalBanner, messageBanner, descriptionBanner] = getBanner(banner)\r\n\r\n    const customMarquee = (ban: any, children: any) => {\r\n        if (getPlay(ban)) {\r\n            if (typeof (ban) === 'boolean') {\r\n                return <Marquee pauseOnHover={true}>{markdown(children)}</Marquee>\r\n            } else {\r\n                return <Marquee pauseOnHover={ban['pauseOnHover']} speed={ban['speed']} play={ban['play']}\r\n                                direction={ban['direction']}>{markdown(children)}</Marquee>\r\n            }\r\n        } else {\r\n            return markdown(children)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Alert: {\r\n                        ...theme\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            <Alert\r\n                message={customMarquee(messageBanner, message)}\r\n                description={description == null ? undefined : customMarquee(descriptionBanner, description)}\r\n                type={Object.keys(colorList).indexOf(color) !== -1 ? color : 'info'}\r\n                showIcon={typeof (icon) === 'boolean' ? icon : true}\r\n                closable={closable}\r\n                banner={totalBanner}\r\n                style={{borderRadius: getSize(radius, MartineRadiusSize)}}\r\n                onClose={() => Streamlit.setFrameHeight(0)}\r\n                icon={typeof (icon) === 'boolean' ? undefined : <CustomIcon icon={icon} class={'ant-alert-icon'}/>}\r\n            />\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default AntdAlert\r\n","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect} from \"react\";\r\nimport {ConfigProvider, Rate} from 'antd';\r\nimport {getTheme, parseIcon, RgbaColor} from \"../js/utils.react\"\r\nimport {StarFilled} from '@ant-design/icons';\r\nimport {BaseProp, LabelWrap} from \"./utils\";\r\n\r\ninterface RateProp extends BaseProp {\r\n    label: any\r\n    description: any\r\n    value: any\r\n    count: any\r\n    symbol: any\r\n    align: string\r\n    half: boolean\r\n    stValue: any\r\n}\r\n\r\nconst AntdRate = (props: RateProp) => {\r\n    //get data\r\n    const {color, font, backgroundColor, size, primaryColor, textColor, theme} = getTheme(props);\r\n\r\n    const label = props['label'];\r\n    const description = props['description'];\r\n    const value = props['value'];\r\n    const count = props['count'];\r\n    const symbol = parseIcon(props['symbol']);\r\n    const align = props['align'];\r\n    const half = props['half'];\r\n    const sizeMap: any = {'xs': 12, 'sm': 16, 'md': 20, 'lg': 30, 'xl': 50}\r\n\r\n    // component height\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n    //callback\r\n    const onChange = (value: number) => {\r\n        Streamlit.setComponentValue(value)\r\n    }\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Rate: {\r\n                        ...theme,\r\n                        colorFillContent: RgbaColor(textColor, 0.2),\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            <LabelWrap\r\n                label={label}\r\n                desc={description}\r\n                align={align}\r\n                size={size}\r\n                children={\r\n                    <Rate\r\n                        defaultValue={value}\r\n                        count={count}\r\n                        character={symbol !== null ? symbol : <StarFilled/>}\r\n                        allowHalf={half}\r\n                        style={{fontSize: typeof (size) == 'string' ? sizeMap[size] : size, color: primaryColor}}\r\n                            onChange={onChange}\r\n                    />\r\n                }\r\n            />\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default AntdRate\r\n","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {ConfigProvider, Steps} from 'antd';\r\nimport {getSize, getTheme, insertStyle, RgbaColor} from \"../js/utils.react\";\r\nimport {strToNode} from \"../js/steps.react\";\r\nimport \"../css/steps.css\"\r\nimport {BaseProp} from \"./utils\";\r\n\r\ninterface StepsProp extends BaseProp {\r\n    items: any[];\r\n    index: number;\r\n    placement: any;\r\n    direction: any;\r\n    variant: any;\r\n    dot: boolean;\r\n    return_index: boolean;\r\n    kv: any;\r\n    stValue: any\r\n}\r\n\r\nconst AntdSteps = (props: StepsProp) => {\r\n    //get data\r\n    const {color, font, backgroundColor, size, primaryColor, textColor, theme} = getTheme(props);\r\n\r\n    const items = strToNode(props['items'])\r\n    const index = props['index']\r\n    const placement = props['placement']\r\n    const direction = props['direction']\r\n    const variant = props['variant']\r\n    const dot = props['dot']\r\n    const return_index = props['return_index']\r\n    const kv = props['kv']\r\n\r\n    const primaryLightColor = RgbaColor(primaryColor)\r\n\r\n\r\n    const [current, setCurrent] = useState(index)\r\n\r\n    // component height\r\n    useEffect(() => {\r\n        setTimeout(() => Streamlit.setFrameHeight(), 0.01)\r\n    })\r\n\r\n    const textStyle = `\r\n    .ant-steps-item-title{\r\n        font-size:${getSize(size)}px !important\r\n    }\r\n    .ant-steps-item-custom .ant-steps-item-icon .ant-steps-icon{\r\n        color:${RgbaColor(textColor, 0.5)} !important\r\n    }\r\n    `\r\n    insertStyle(`sac.steps.style`, textStyle)\r\n\r\n    //callback\r\n    const onChange = (current: any) => {\r\n        setCurrent(current)\r\n        Streamlit.setComponentValue(return_index ? current : kv[current])\r\n    }\r\n\r\n    //listen index and stIndex\r\n    const prevIndex = useRef(props['index'])\r\n    const prevStValue = useRef(props['stValue'])\r\n    useEffect(() => {\r\n        const i = props['index']\r\n        const st_i = props['stValue']\r\n        if (i !== prevIndex.current && i !== null) {\r\n            setCurrent(i);\r\n            Streamlit.setComponentValue(return_index ? i : kv[i]);\r\n            prevIndex.current = props['index']\r\n        }\r\n        if (st_i !== prevStValue.current) {\r\n            setCurrent(st_i);\r\n            Streamlit.setComponentValue(return_index ? st_i : kv[st_i]);\r\n            prevStValue.current = props['stValue']\r\n        }\r\n    }, [props, kv, return_index])\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Steps: {\r\n                        ...theme,\r\n                        colorTextLabel: RgbaColor(textColor, 0.5),\r\n                        colorFillContent: RgbaColor(textColor, 0.1),\r\n                        colorSplit: RgbaColor(textColor, 0.5),\r\n                        navArrowColor: RgbaColor(textColor, 0.5),\r\n                        colorTextDescription: RgbaColor(textColor, 0.5),\r\n                        controlItemBgActive: primaryLightColor,\r\n                        customIconFontSize: getSize(size) + 14,\r\n                        iconFontSize: getSize(size) - 2,\r\n                        iconSize: getSize(size) + 16,\r\n                        fontSize: getSize(size) - 2,\r\n                        dotSize: getSize(size) - 8,\r\n                        dotCurrentSize: getSize(size) - 6,\r\n                        iconTop: 0,\r\n                        colorIconHover: 'red'\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            <Steps\r\n                items={items}\r\n                current={current}\r\n                direction={direction}\r\n                labelPlacement={placement}\r\n                type={variant}\r\n                progressDot={dot}\r\n                onChange={onChange}\r\n            />\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default AntdSteps\r\n","import {deepCopy} from \"./utils.react\";\r\nimport {CustomIcon} from \"../ts/utils\";\r\nimport React from \"react\";\r\n\r\nconst strToNode = (obj) => {\r\n    return obj.map((item, idx) => {\r\n        let item_ = deepCopy(item)\r\n        if (item_['icon'] != null) {\r\n            item_['icon'] = <CustomIcon icon={item_['icon']}/>\r\n        }\r\n        item_['subTitle'] = item_['subtitle']\r\n        delete item_['subtitle']\r\n        return item_\r\n    })\r\n}\r\n\r\nexport {strToNode}","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {Checkbox, ConfigProvider} from 'antd';\r\nimport type {CheckboxValueType} from \"antd/es/checkbox/Group\";\r\nimport type {CheckboxChangeEvent} from 'antd/es/checkbox';\r\nimport {getSize, getTheme, insertStyle, MartineRadiusSize, RgbaColor} from \"../js/utils.react\"\r\nimport {BaseProp, LabelWrap} from \"./utils\";\r\n\r\ninterface CheckboxProp extends BaseProp {\r\n    label: any\r\n    description: any\r\n    items: any[]\r\n    index: any\r\n    check_all: boolean | string\r\n    radius: any\r\n    align: string\r\n    disabled: boolean\r\n    return_index: boolean;\r\n    kv: any;\r\n    stValue: any\r\n}\r\n\r\nconst AntdCheckbox = (props: CheckboxProp) => {\r\n    //get data\r\n    const items = props['items']\r\n    let index = props['index']\r\n    const check_all = props['check_all']\r\n    const label = props['label']\r\n    const description = props['description']\r\n    const radius = props['radius']\r\n    const align = props['align']\r\n    const disabled = props['disabled']\r\n    const return_index = props['return_index']\r\n    const kv = props['kv']\r\n    const allIndex = disabled ? [] : items.filter(item => !item.disabled).map(item => item.value)\r\n\r\n    const {color, font, backgroundColor, size, primaryColor, textColor, theme} = getTheme(props);\r\n\r\n\r\n    // component height\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n    const textStyle = `\r\n    .ant-checkbox-inner{\r\n        border-radius:${getSize(radius, MartineRadiusSize)}px !important\r\n    }\r\n    .ant-checkbox-indeterminate .ant-checkbox-inner:after{\r\n        width:50% !important;\r\n        height:50% !important\r\n    }\r\n    .ant-checkbox-checked .ant-checkbox-inner:after{\r\n        top:45% !important\r\n    }\r\n    `\r\n    insertStyle(`sac.checkbox.style`, textStyle)\r\n\r\n    //state\r\n    const [checkedList, setCheckedList] = useState<CheckboxValueType[]>(index)\r\n\r\n    const initState = (x: number[], y: number[]) => {\r\n        if (x.length === y.length) {\r\n            return {'checkAll': true, 'indeterminate': false}\r\n        } else {\r\n            if (x.length > 0) {\r\n                return {'checkAll': false, 'indeterminate': true}\r\n            } else {\r\n                return {'checkAll': false, 'indeterminate': false}\r\n            }\r\n        }\r\n    }\r\n    const [indeterminate, setIndeterminate] = useState(initState(index, allIndex)['indeterminate']);\r\n    const [checkAll, setCheckAll] = useState(initState(index, allIndex)['checkAll']);\r\n\r\n    //callback\r\n    const onChange = (list: CheckboxValueType[]) => {\r\n        setCheckedList(list)\r\n        setIndeterminate(!!list.length && list.length < allIndex.length);\r\n        setCheckAll(list.length === allIndex.length)\r\n        Streamlit.setComponentValue(list.map((x: any) => return_index ? x : kv[x]))\r\n    }\r\n    const onCheckAllChange = (e: CheckboxChangeEvent) => {\r\n        let stValue = e.target.checked ? allIndex : [];\r\n        setCheckedList(stValue);\r\n        setIndeterminate(false);\r\n        setCheckAll(e.target.checked);\r\n        Streamlit.setComponentValue(stValue.map((x: any) => return_index ? x : kv[x]))\r\n    };\r\n\r\n    //listen index\r\n    const prevIndex = useRef(props['index'])\r\n    const prevStValue = useRef(props['stValue'])\r\n\r\n    useEffect(() => {\r\n        const i = props['index']\r\n        const st_i = props['stValue']\r\n        if (String(i) !== String(prevIndex.current)) {\r\n            setCheckedList(i);\r\n            prevIndex.current = props['index']\r\n            Streamlit.setComponentValue(i.map((x: any) => return_index ? x : kv[x]))\r\n        }\r\n        if (String(st_i) !== String(prevStValue.current)) {\r\n            const st_ii = Array.isArray(st_i) ? st_i : [st_i]\r\n            setCheckedList(st_ii);\r\n            prevStValue.current = props['stValue']\r\n            Streamlit.setComponentValue(st_ii.map((x: any) => return_index ? x : kv[x]))\r\n        }\r\n    }, [props, kv, return_index])\r\n\r\n    const checkAllElement = (x: boolean | string) => {\r\n        if (String(x) === 'false') {\r\n            return undefined\r\n        } else {\r\n            return <Checkbox\r\n                indeterminate={indeterminate}\r\n                checked={checkAll}\r\n                onChange={onCheckAllChange}\r\n                style={{paddingRight: 8, whiteSpace: \"nowrap\"}}\r\n            >\r\n                {String(x) === 'true' ? 'Check all' : x}\r\n            </Checkbox>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Checkbox: {\r\n                        ...theme,\r\n                        colorText: '--text-color',\r\n                        colorPrimaryHover: 'transform',\r\n                        colorTextDisabled: RgbaColor(textColor, 0.5),\r\n                        colorBgContainerDisabled: RgbaColor(textColor),\r\n                        colorBorder: RgbaColor(textColor, 0.3),\r\n                        controlInteractiveSize: 2 * getSize(size) - 10,\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            <LabelWrap\r\n                label={label}\r\n                desc={description}\r\n                align={align}\r\n                size={size}\r\n                children={\r\n                    <div className={`d-flex flex-row align-items-start`}>\r\n                        {checkAllElement(check_all)}\r\n                        <Checkbox.Group\r\n                            options={items}\r\n                            disabled={disabled}\r\n                            defaultValue={index}\r\n                            value={checkedList}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                }\r\n            />\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default AntdCheckbox\r\n","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect} from \"react\";\r\nimport {ConfigProvider, Empty, Result, Space} from 'antd';\r\nimport {GetColor, markdown, RgbaColor} from \"../js/utils.react\";\r\nimport {CustomIcon} from \"./utils\";\r\n\r\ninterface ResultProp {\r\n    label: any;\r\n    description: string | null;\r\n    status: any;\r\n    icon: any;\r\n    key: string | undefined;\r\n}\r\n\r\nconst AntdResult = (props: ResultProp) => {\r\n    //get data\r\n    let title = props['label']\r\n    const subtitle = props['description']\r\n    const status = props['status']\r\n    const icon = props['icon']\r\n    const key = props['key']\r\n    const colorMap = {\r\n        'info': 'rgba(28, 131, 225, 0.9)',\r\n        'success': 'rgba(33, 195, 84, 0.8)',\r\n        'warning': 'rgba(255, 207, 18,0.9)',\r\n        'error': 'rgba(255, 43, 43, 0.8)',\r\n    }\r\n    // @ts-ignore\r\n    const color = colorMap[status]\r\n    const textColor = GetColor('--text-color')\r\n    // component height\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n    const resultWrap = (s: ResultProp['status']) => {\r\n        if (s === 'empty') {\r\n            return <Empty\r\n                description={<Space direction={'vertical'} className={'d-flex'}>\r\n                    <div style={{fontSize: 24}}>{title}</div>\r\n                    <div style={{fontSize: 14}}>{subtitle}</div>\r\n                </Space>}\r\n            />\r\n        } else {\r\n            return <Result\r\n                key={key}\r\n                title={markdown(title)}\r\n                subTitle={markdown(subtitle)}\r\n                status={status}\r\n                icon={icon !== null ? <CustomIcon icon={icon} style={{fontSize: 72, color: color}}/> : undefined}\r\n                className={'pb-0'}\r\n                style={{wordWrap: 'break-word'}}\r\n            />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Result: {\r\n                        colorTextHeading: 'var(--text-color)',\r\n                        colorTextDescription: RgbaColor(textColor, 0.5),\r\n                        iconFontSize: 72,\r\n                        extraMargin: 0,\r\n                        colorInfo: colorMap.info,\r\n                        colorSuccess: colorMap.success,\r\n                        colorWarning: colorMap.warning,\r\n                        colorError: colorMap.error,\r\n                    },\r\n                    Empty: {\r\n                        colorText: RgbaColor(textColor, 0.5),\r\n                    }\r\n                },\r\n            }}\r\n        >\r\n            {resultWrap(status)}\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default AntdResult\r\n","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport type {PaginationProps} from 'antd';\r\nimport {ConfigProvider, Pagination} from 'antd';\r\nimport {getSize, getTheme, insertStyle, MartineRadiusSize, RgbaColor} from \"../js/utils.react\"\r\nimport '../css/pagination.css'\r\nimport {BaseProp} from \"./utils\";\r\n\r\ninterface PaginationProp extends BaseProp {\r\n    total: any\r\n    index: any\r\n    page_size: any\r\n    jump: any\r\n    align: string\r\n    circle: string\r\n    radius: any\r\n    variant: any\r\n    previous: any\r\n    next: any\r\n    simple: boolean\r\n    disabled: boolean\r\n    show_total: boolean\r\n    stValue: any\r\n}\r\n\r\nconst AntdPagination = (props: PaginationProp) => {\r\n    //get data\r\n    const {color, font, backgroundColor, size, primaryColor, textColor, theme} = getTheme(props);\r\n\r\n    const total = props['total'];\r\n    const index = props['index'];\r\n    const page_size = props['page_size'];\r\n    const jump = props['jump'];\r\n    const align = props['align'];\r\n    const radius = props['radius'];\r\n    const variant = props['variant'];\r\n    const previous = props['previous'];\r\n    const next = props['next'];\r\n    const simple = props['simple'];\r\n    const disabled = props['disabled'];\r\n    const show_total = props['show_total'];\r\n    const primaryLightColor = RgbaColor(primaryColor)\r\n\r\n    const [current, setCurrent] = useState(index);\r\n\r\n    // component height\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n\r\n    const textStyle = `\r\n    .ant-pagination-item-active{\r\n        border-color: ${variant === 'light' ? primaryLightColor : primaryColor} !important\r\n    }\r\n    .ant-pagination-item-active a{\r\n        color: ${variant === 'filled' ? '#fff' : primaryColor} !important\r\n    }\r\n    .ant-pagination-options-quick-jumper input{\r\n        border-radius: ${getSize(radius, MartineRadiusSize)}px;\r\n        aspect-ratio: 2/1;\r\n        width:auto !important\r\n    }\r\n    .ant-pagination-item-ellipsis{\r\n        color:${RgbaColor(textColor)} !important\r\n    }\r\n    .ant-pagination-item-link[disabled]{\r\n        color:${RgbaColor(textColor)} !important\r\n    }\r\n    .ant-pagination-item-link,.ant-pagination-item-link-icon{\r\n        font-size:${getSize(size)}px !important\r\n    }\r\n    `\r\n    insertStyle(`sac.pagination.style`, textStyle)\r\n\r\n    //callback\r\n    const onChange: PaginationProps['onChange'] = (page) => {\r\n        setCurrent(page);\r\n        Streamlit.setComponentValue(page)\r\n    }\r\n\r\n    //listen index\r\n    const prevIndex = useRef(props['index'])\r\n    const prevStValue = useRef(props['stValue'])\r\n    useEffect(() => {\r\n        const i = props['index']\r\n        const st_i = props['stValue']\r\n        if (i !== prevIndex.current) {\r\n            setCurrent(i);\r\n            Streamlit.setComponentValue(i);\r\n            prevIndex.current = props['index']\r\n        }\r\n        if (st_i !== prevStValue.current) {\r\n            setCurrent(st_i);\r\n            Streamlit.setComponentValue(st_i);\r\n            prevStValue.current = props['stValue']\r\n        }\r\n    }, [props])\r\n\r\n    //previous and next button\r\n    const itemRender: PaginationProps['itemRender'] = (_, type, originalElement) => {\r\n        if (type === 'prev' && previous !== null) {\r\n            return <button className={'ant-pagination-item-link px-2'} style={{fontSize: getSize(size)}}>\r\n                {previous}\r\n            </button>\r\n        }\r\n        if (type === 'next' && next !== null) {\r\n            return <button className={'ant-pagination-item-link px-2'} style={{fontSize: getSize(size)}}>\r\n                {next}\r\n            </button>\r\n        }\r\n        return originalElement;\r\n    };\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Pagination: {\r\n                        ...theme,\r\n                        itemActiveBg: variant === 'outline' ? 'transform' : variant === 'light' ? primaryLightColor : primaryColor,\r\n                        colorPrimaryHover: primaryColor,\r\n                        colorBgTextHover: RgbaColor(textColor),\r\n                        colorBgTextActive: RgbaColor(textColor, 0.25),\r\n                        borderRadius: getSize(radius, MartineRadiusSize),\r\n                        controlOutlineWidth: 0,\r\n                        colorBorder: RgbaColor(textColor, 0.3),\r\n                        itemSize: 3 * getSize(size) - 16,\r\n                        controlHeight: 3 * getSize(size) - 18,\r\n                        colorTextDisabled: RgbaColor(textColor),\r\n                        controlItemBgActiveDisabled: RgbaColor(textColor, 0.1),\r\n                        colorBgContainerDisabled: RgbaColor(textColor, 0.1),\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            <div className={`d-flex justify-content-${align}`}>\r\n                <Pagination\r\n                    current={current}\r\n                    showQuickJumper={jump}\r\n                    defaultCurrent={index}\r\n                    defaultPageSize={page_size}\r\n                    simple={simple}\r\n                    disabled={disabled}\r\n                    onChange={onChange}\r\n                    total={total}\r\n                    showTitle={false}\r\n                    showSizeChanger={false}\r\n                    itemRender={itemRender}\r\n                    showTotal={show_total ? (t, r) => `${r[0]}-${r[1]} / ${t}` : undefined}\r\n                />\r\n            </div>\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default AntdPagination\r\n","import {deepCopy,} from \"./utils.react\";\r\nimport React from \"react\";\r\nimport {CustomIcon} from \"../ts/utils\";\r\n\r\nconst strToNode = (obj) => {\r\n    if (Array.isArray(obj)) {\r\n        return obj.map(obj_ => strToNode(obj_))\r\n    } else {\r\n        let obj_copy = deepCopy(obj);\r\n        let label = obj_copy['label']\r\n        let icon = obj_copy['icon']\r\n        if (icon !== null) {\r\n            if (label.length > 0) {\r\n                obj_copy['label'] = <span>\r\n                    <CustomIcon icon={icon} style={{marginRight:5}}/>\r\n                    {label}\r\n                </span>\r\n            } else {\r\n                obj_copy['label'] = <CustomIcon icon={icon}/>\r\n            }\r\n        }\r\n        obj_copy['value'] = String(obj_copy['value'])\r\n        return obj_copy\r\n    }\r\n}\r\nexport default strToNode","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {Chip, Group, Stack} from \"@mantine/core\";\r\nimport {DarkenColor, GetColor, getSize, getTheme, reindex, RgbaColor} from \"../js/utils.react\"\r\nimport strToNode from \"../js/chip.react\";\r\nimport {BaseProp, LabelWrap} from \"./utils\";\r\n\r\ninterface ChipProp extends BaseProp {\r\n    label: any\r\n    description: any\r\n    items: any[]\r\n    index: any\r\n    align: string\r\n    direction: string\r\n    radius: any\r\n    variant: string\r\n    multiple: boolean\r\n    return_index: boolean;\r\n    kv: any;\r\n    stValue: any\r\n}\r\n\r\nconst AntdChip = (props: ChipProp) => {\r\n    //get data\r\n    const items = strToNode(props['items'])\r\n    const index = reindex(props['index'], true, props['multiple'])\r\n    const label = props['label']\r\n    const description = props['description']\r\n    const align = props['align']\r\n    const direction = props['direction']\r\n    const radius = props['radius']\r\n    const variant = props['variant']\r\n    const multiple = props['multiple']\r\n    const return_index = props['return_index']\r\n    const kv = props['kv']\r\n    const secondaryBgColor = GetColor('--secondary-background-color')\r\n\r\n    const {color, font, backgroundColor, size, primaryColor, textColor, theme} = getTheme(props);\r\n\r\n    // component height\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n    const Wrap = direction === 'vertical' ? Stack : Group\r\n\r\n    //state\r\n    const [value, setValue] = useState(index)\r\n\r\n    //callback\r\n    const onChange = (values: any) => {\r\n        setValue(values)\r\n        if (Array.isArray(values)) {\r\n            Streamlit.setComponentValue(values.map((x: any) => return_index ? Number(x) : kv[Number(x)]))\r\n        } else {\r\n            Streamlit.setComponentValue(return_index ? Number(values) : kv[Number(values)])\r\n        }\r\n    }\r\n\r\n    //listen index\r\n    const prevIndex = useRef(props['index'])\r\n    const prevStValue = useRef(props['stValue'])\r\n    useEffect(() => {\r\n        const i = props['index']\r\n        const st_i = props['stValue']\r\n        if (String(i) !== String(prevIndex.current)) {\r\n            const ii = reindex(i, true, props['multiple'])\r\n            setValue(ii);\r\n            prevIndex.current = props['index']\r\n            if (Array.isArray(ii)) {\r\n                Streamlit.setComponentValue(ii.map((x: any) => return_index ? Number(x) : kv[Number(x)]))\r\n            } else {\r\n                Streamlit.setComponentValue(return_index ? Number(ii) : kv[Number(ii)])\r\n            }\r\n        }\r\n        if (String(st_i) !== String(prevStValue.current)) {\r\n            const st_ii = reindex(st_i, true, props['multiple'])\r\n            setValue(st_ii);\r\n            prevStValue.current = props['stValue']\r\n            if (Array.isArray(st_ii)) {\r\n                Streamlit.setComponentValue(st_ii.map((x: any) => return_index ? Number(x) : kv[Number(x)]))\r\n            } else {\r\n                Streamlit.setComponentValue(return_index ? Number(st_ii) : kv[Number(st_ii)])\r\n            }\r\n        }\r\n    }, [props, kv, return_index])\r\n\r\n    return <LabelWrap\r\n        label={label}\r\n        desc={description}\r\n        size={size}\r\n        align={align}\r\n        children={\r\n            <Chip.Group\r\n                onChange={onChange}\r\n                value={value}\r\n                multiple={multiple}\r\n            >\r\n                <Wrap spacing={'xs'}>\r\n                    {items.map((item: any, idx: any) =>\r\n                        <Chip\r\n                            key={idx}\r\n                            value={item.value}\r\n                            radius={radius}\r\n                            size={size}\r\n                            variant={variant}\r\n                            disabled={item.disabled}\r\n                            styles={(theme) => ({\r\n                                label: {\r\n                                    height: getSize(size) + 16,\r\n                                    marginBottom: 0,\r\n                                    color: textColor,\r\n                                    borderColor:\r\n                                        variant !== 'outline' ? 'transparent' : RgbaColor(textColor),\r\n                                    backgroundColor: variant === 'outline' ? 'transparent' : secondaryBgColor,\r\n                                    '&:hover': {\r\n                                        backgroundColor:\r\n                                            variant === 'outline' ? 'transparent' : DarkenColor(secondaryBgColor, 0.1),\r\n                                        borderColor:\r\n                                            variant === 'outline' ? primaryColor : 'transparent',\r\n                                    },\r\n                                    '&[data-checked]:not([data-disabled])': {\r\n                                        color:\r\n                                            variant === 'light' ? primaryColor : variant === 'filled' ? '#fff' : textColor\r\n                                        ,\r\n                                        backgroundColor:\r\n                                            variant === 'light' ? RgbaColor(primaryColor) :\r\n                                                variant === 'filled' ? primaryColor : 'transparent',\r\n                                        borderColor:\r\n                                            variant === 'outline' ? primaryColor : 'transparent',\r\n                                    },\r\n                                    '&[data-checked]:not([data-disabled]):hover': {\r\n                                        backgroundColor:\r\n                                            variant === 'light' ? RgbaColor(primaryColor, 0.3) :\r\n                                                variant === 'filled' ? DarkenColor(primaryColor, 0.1) : 'transparent',\r\n                                    },\r\n                                },\r\n                                checkIcon: {\r\n                                    color:\r\n                                        variant === 'filled' ? '#fff' : primaryColor\r\n                                }\r\n                            })}\r\n                        >\r\n                            {item.label}\r\n                        </Chip>)}\r\n                </Wrap>\r\n            </Chip.Group>\r\n        }\r\n    />\r\n};\r\n\r\nexport default AntdChip\r\n","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {ColorPicker, ConfigProvider} from 'antd';\r\nimport {getTheme} from \"../js/utils.react\"\r\nimport {BaseProp, LabelWrap} from \"./utils\";\r\nimport {Color} from \"antd/es/color-picker\";\r\nimport '../css/color_picker.css'\r\n\r\n\r\ninterface ColorPickerProp extends BaseProp {\r\n    label: any\r\n    description: any\r\n}\r\n\r\nconst AntdColorPicker = (props: ColorPickerProp) => {\r\n    //get data\r\n    const {backgroundColor, size, primaryColor, textColor, theme} = getTheme(props);\r\n    const label = props['label']\r\n    const description = props['description']\r\n    const labelHeight = label !== null ? 64 : 32\r\n    //state\r\n    const [height, setHeight] = useState(labelHeight)\r\n    const [color, setColor] = useState(props.color);\r\n\r\n    // component height\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n    //callback\r\n    const onChange = (value: Color, hex: string) => {\r\n        setColor(value)\r\n        Streamlit.setComponentValue(hex)\r\n    }\r\n\r\n    const openChange = (open: boolean) => {\r\n        let labelHeight = label !== null ? 64 : 32\r\n        setHeight(open ? 270 + labelHeight : labelHeight)\r\n    }\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    ColorPicker: {\r\n                        ...theme,\r\n                    }\r\n                }\r\n            }}>\r\n            <LabelWrap\r\n                label={label}\r\n                desc={description}\r\n                grow={true}\r\n                children={\r\n                    <ColorPicker\r\n                        onChange={onChange}\r\n                        value={color}\r\n                        defaultValue={primaryColor}\r\n                        // showText={label}\r\n                        onOpenChange={openChange}\r\n                    />}/></ConfigProvider>)\r\n};\r\n\r\nexport default AntdColorPicker\r\n","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {ConfigProvider, QRCode} from 'antd';\r\nimport {getTheme} from \"../js/utils.react\"\r\nimport {BaseProp, LabelWrap} from \"./utils\";\r\nimport {Color} from \"antd/es/color-picker\";\r\nimport '../css/color_picker.css'\r\n\r\n\r\ninterface QRCodeProp extends BaseProp {\r\n    label: any\r\n    description: any\r\n    value: any\r\n}\r\n\r\nconst AntdQRCode = (props: QRCodeProp) => {\r\n    //get data\r\n    const {backgroundColor, size, primaryColor, textColor, theme} = getTheme(props);\r\n    const label = props['label']\r\n    const description = props['description']\r\n    const value = props['value']\r\n    // const labelHeight = label !== null ? 64*5 : 32*5\r\n\r\n    //state\r\n    // const [height, setHeight] = useState()\r\n    // const [color, setColor] = useState(props.color);\r\n\r\n    // component height\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n    //callback\r\n    // const onChange = (text: Color, hex: string) => {\r\n    //     setColor(text)\r\n    //     Streamlit.setComponentValue(text)\r\n    // }\r\n\r\n    // const openChange = (open: boolean) => {\r\n    //     let labelHeight = label !== null ? 64 : 32\r\n    //     setHeight(open ? 270 + labelHeight : labelHeight)\r\n    // }\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    QRCode: {\r\n                        ...theme,\r\n                    }\r\n                }\r\n            }}>\r\n            <LabelWrap\r\n                label={label}\r\n                desc={description}\r\n                grow={true}\r\n                children={\r\n                    <QRCode\r\n                        value={value}\r\n                        color={primaryColor}\r\n                        // defaultValue={primaryColor}\r\n                        // onChange={onChange}\r\n                        // onOpenChange={openChange}\r\n                    />}/></ConfigProvider>)\r\n};\r\n\r\nexport default AntdQRCode\r\n","// AntdPhoneNumber.tsx\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { ConfigProvider, Input, Select } from 'antd';\r\nimport PhoneInput from 'react-phone-number-input';\r\nimport 'react-phone-number-input/style.css';\r\nimport { Streamlit } from \"streamlit-component-lib\";\r\nimport { getTheme } from \"../js/utils.react\"\r\nimport { BaseProp, LabelWrap } from \"./utils\";\r\nimport '../css/color_picker.css'\r\n\r\nconst { Option } = Select;\r\n\r\ninterface AntdPhoneNumberProps extends BaseProp {\r\n  label: any;\r\n  description: any;\r\n}\r\n\r\nconst AntdPhoneNumber = (props: AntdPhoneNumberProps) => {\r\n  // get data\r\n  const theme  = getTheme(props);\r\n  const label = props['label'];\r\n  const description = props['description'];\r\n\r\n  // state\r\n  const [value, setValue] = useState('34');\r\n\r\n  // component height\r\n  useEffect(() => Streamlit.setFrameHeight());\r\n\r\n  // callback\r\n  const onChange = (value: string) => {\r\n    setValue(value);\r\n    Streamlit.setComponentValue(value);\r\n  };\r\n\r\n\r\n  return (\r\n    <ConfigProvider\r\n      theme={{\r\n        components: {\r\n          Input: {\r\n            ...theme, // You can customize Input styles here if needed\r\n          },\r\n          Select: {\r\n            ...theme, // You can customize Select styles here if needed\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <LabelWrap\r\n        label={label}\r\n        desc={description}\r\n        grow={true}\r\n        children={\r\n          <PhoneInput\r\n            international\r\n            defaultCountry=\"US\"\r\n            countrySelectProps={{ showFlags: true }}\r\n            onChange={onChange}\r\n            inputComponent={(inputProps) => (\r\n              <Input\r\n                {...inputProps}\r\n                style={{ width: '100%' }}\r\n                addonBefore={\r\n                  <Select\r\n                    defaultValue=\"+1\"\r\n                    style={{ width: 80 }}\r\n                    onChange={(value) => onChange(value)}\r\n                  >\r\n                    <Option value=\"+1\">+1 (USA)</Option>\r\n                    <Option value=\"+34\">+34 (Spain)</Option>\r\n                    {/* Add more countries as needed */}\r\n                  </Select>\r\n                }\r\n              />\r\n            )}\r\n          />\r\n        }\r\n      />\r\n    </ConfigProvider>\r\n  );\r\n};\r\n\r\nexport default AntdPhoneNumber;\r\n","import AntdButtons from \"./ts/Buttons\";\r\nimport AntdTabs from \"./ts/Tabs\";\r\nimport AntdMenu from \"./ts/Menu\";\r\nimport AntdTree from \"./ts/Tree\";\r\nimport AntdCascader from \"./ts/Cascader\";\r\nimport AntdDivider from \"./ts/Divider\";\r\nimport AntdSwitch from \"./ts/Switch\";\r\nimport AntdTransfer from \"./ts/Transfer\";\r\nimport AntdSegmented from \"./ts/Segmented\";\r\nimport AntdAlert from \"./ts/Alert\";\r\nimport AntdRate from \"./ts/Rate\";\r\nimport AntdSteps from \"./ts/Steps\";\r\nimport AntdCheckbox from \"./ts/Checkbox\";\r\nimport AntdResult from \"./ts/Result\";\r\nimport {AntdTags} from \"./ts/Tag\";\r\nimport AntdPagination from \"./ts/Pagination\";\r\nimport AntdChip from \"./ts/Chip\";\r\nimport AntdColorPicker from \"./ts/ColorPicker\";\r\nimport AntdQRCode from \"./ts/QRCode\";\r\nimport AntdPhoneNumber from \"./ts/PhoneNumber\";\r\n\r\n//named components\r\nconst componentsMap: any = {\r\n    'buttons': AntdButtons,\r\n    'tabs': AntdTabs,\r\n    'menu': AntdMenu,\r\n    'tree': AntdTree,\r\n    'cascader': AntdCascader,\r\n    'divider': AntdDivider,\r\n    'switch': AntdSwitch,\r\n    'transfer': AntdTransfer,\r\n    'segmented': AntdSegmented,\r\n    'alert': AntdAlert,\r\n    'rate': AntdRate,\r\n    'steps': AntdSteps,\r\n    'checkbox': AntdCheckbox,\r\n    'result': AntdResult,\r\n    'tags': AntdTags,\r\n    'pagination': AntdPagination,\r\n    'chip': AntdChip,\r\n    'color_picker': AntdColorPicker,\r\n    'qr_code': AntdQRCode,\r\n    'phone_number': AntdPhoneNumber,\r\n}\r\n\r\nexport default componentsMap","import {ComponentProps, withStreamlitConnection} from \"streamlit-component-lib\";\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport componentsMap from \"./components\";\r\nimport {insertScrollbarStyle} from \"./js/utils.react\";\r\nimport './css/utils.css'\r\n\r\n//select component\r\nconst AntdComponent = (props: ComponentProps) => {\r\n    //get data\r\n    const id = props.args['id']\r\n    const kw = props.args['kw']\r\n\r\n    //load streamlit style scrollbar\r\n    insertScrollbarStyle()\r\n\r\n    //return component base on component id\r\n    const component = componentsMap[id]\r\n    if (component === undefined) {\r\n        return <></>\r\n    } else {\r\n        return component(kw)\r\n    }\r\n};\r\n\r\n//wrap component\r\nconst StreamlitAntdComponent = withStreamlitConnection(AntdComponent)\r\n\r\n//render component\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <StreamlitAntdComponent/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}